<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的程序世界</title>
  <subtitle>今年我23岁了</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://febsky.me/"/>
  <updated>2016-07-29T09:30:23.000Z</updated>
  <id>http://febsky.me/</id>
  
  <author>
    <name>Qiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从别人app(Android)中拿数据</title>
    <link href="http://febsky.me/2016/07/29/2016-07-29-%E4%BB%8E%E5%88%AB%E4%BA%BAapp(Android)%E4%B8%AD%E6%8B%BF%E6%95%B0%E6%8D%AE/"/>
    <id>http://febsky.me/2016/07/29/2016-07-29-从别人app(Android)中拿数据/</id>
    <published>2016-07-29T07:30:35.000Z</published>
    <updated>2016-07-29T09:30:23.000Z</updated>
    
    <content type="html">&lt;p&gt;开篇之前，我一直考虑这算不算侵权？只是兴趣，如果有人告知侵权的话，立马删除。&lt;/p&gt;
&lt;p&gt;我所说的数据不是指拿别人app中的图片资源。而是程序运行所需要的数据。&lt;/p&gt;
&lt;p&gt;App中的数据无非两种，一种是网络数据，一种是本地数据。网络请求我们一般用抓包工具（Mac上的Charles 或者Windows上的Fiddler）来获取Api，然后在用程序循环请求，获取所有的数据。而另一种是app存储到本地的数据，一种是存储到文件中的，一种是存储到数据库中的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-1b265d736d12f8f5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;快快查汉语词典&quot;&gt;&lt;/p&gt;
&lt;p&gt;一次偶然的机会，发现&lt;code&gt;快快查汉语词典&lt;/code&gt;这个app作为汉语词典来说，还算是比较良心的app，免费，而且界面还是比较干净的。而且词库比较全。所以我想获取这个词典的所有词库，作为自己的词库使用。像这种词典，一般汉字都用拼音散列开了。所以我想获取汉字和拼音的映射。好吧，用了一个周的时间，边学习，变反编译，并且学习了Smali语法。终于把数据解析出来了。&lt;/p&gt;
&lt;p&gt;大体流程：&lt;code&gt;数据解密&lt;/code&gt;—&amp;gt;&lt;code&gt;数据格式化&lt;/code&gt;—&amp;gt;&lt;code&gt;格式化后的数据&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-b078a2c84f32d0b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;汉字查询结果页面&quot;&gt;&lt;/p&gt;
&lt;p&gt;作为一个词典来说，我感觉这个app做的相当不错。有很多值得我们学习的地方。so，我给反编译了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先确定数据来源。&lt;/p&gt;
&lt;p&gt;分析一下数据到底来源于网络呢，还是本地数据存储呢。这个很容易判断，第一次安装好app之后，断开网络，如果仍然能查询，说明本地有数据缓存，如果不能查询，说明必须要访问网络。&lt;strong&gt;好，测试之后我们发现能查询，说明本地可定有一份可供查询的数据存储&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;有些app会做双重数据存储。也就是说数据源，既有网络也有本地，比如有道词典，会做一部分本地存储，详细信息要从网络查询。所以还要做，有网和无网情况下查询详情是不是一样，来判断本地是否存有所有的数据。&lt;strong&gt;经过比较发现本地确实有完整的数据存储&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果数据存储在本地，存在哪了？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;猜测：&lt;/strong&gt; 本地数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;理由：&lt;/strong&gt; 像&lt;code&gt;字--拼音--解释&lt;/code&gt;这种数据结构，一般不适合存放到文件中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实践：&lt;/strong&gt;数据库存放无非三个位置，一个是&lt;code&gt;/data/data/包名&lt;/code&gt;目录下，一个是&lt;code&gt;/sdcard/Android/data/包名&lt;/code&gt;,最后一个就是SD卡了，随便建个文件夹就可以存储。&lt;a href=&quot;http://febsky.me/2015/07/14/2015-07-14-Android%20%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/&quot;&gt;参考,Android文件存放位置&lt;/a&gt;，那么如何判断数据库文件存放在这三个位置中的那个呢？我们来一个个排除：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要访问真机的/data/data目录必须要root权限。当然我的测试机是roo了的。发现里面并没有任何有价值的数据库。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/sdcard/Android/data/包名&lt;/code&gt;这个目录是可以访问的，&lt;code&gt;adb shell&lt;/code&gt;的方式访问之后也没有发现任何有价值的数据。&lt;/li&gt;
&lt;li&gt;那就剩下最后一个sd卡了。这个比较麻烦，因为这个路径不固定，可以任意创建文件夹。如果是测试机，那么sd卡上没有几个文件夹比价好排查。这里可以用一些小技巧。比如我们app的包名为&lt;code&gt;com.kk.dict&lt;/code&gt; 所以按照一般程序员命名规则，这个文件夹如果真的在SD卡上的话，那么有很大的可能性和&lt;code&gt;kk&lt;/code&gt;或者&lt;code&gt;dict&lt;/code&gt;有关，哈哈，经过查找，在sd卡上有个叫&lt;code&gt;kkdict&lt;/code&gt;的文件夹，最后发现所有的离线数据库都在这里面&lt;code&gt;/sdcard/kkdict/dict/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其实上面的三种排查方式比较大众化，也就是可以用于所有的情况下的排查，但是在分析别人的app的时候，我们的方法还是比较灵活的，不拘泥于这么几种，比如我们要分析的这个快快查词典。并不需要这么麻烦。这个app在&lt;code&gt;我的--&amp;gt;设置--&amp;gt;功能包下载&lt;/code&gt;里面能够设置离线的数据库的存储路径。&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-c9a4264d51afa22c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Paste_Image.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由上图可以发现，在这之前的所有分析，都不用了，从离线路径可以分析出来，这数据查询就保存在本地，而且保存路径都可以看到了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;结果：&lt;/strong&gt; 和我们猜想的一样。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;好那接下来我们就从数据库中拿数据了哦~&lt;/p&gt;
&lt;p&gt;可以看到&lt;code&gt;/sdcard/kkdict/dict/&lt;/code&gt;目录下主要有以下数据库：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-106ab8a8cd9de9cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;快快查词典包含的主要数据库&quot;&gt;&lt;/p&gt;
&lt;p&gt;从名字结合app的界面可以大体分析出数据库中存储的内容。我们来看详解这个库，应该存储的是每个字的详细解释。用数据库查看软件查看一下我用的&lt;code&gt;Navicate&lt;/code&gt;Mac上没发现什么好用的sqlite3可视化查看软件。打开数据库，找到里面主要的表，这下懵逼了。表里的数据是用二进制Blob存储的。&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-3647561898e12c5c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;xiangjie.db/xiangjie表&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下面的主要任务就是把这个zhujie的字段表示的数据解析出来：how？&lt;/strong&gt;这种分析主要从哪下手、我一般主要从两方面下手：直接分析数据库；从界面反编译代码后，从代码查询。显然后者难度很大，如果代码混淆了，读起来相当困难。我们先来实验第一种方式，看是否能够成功。也就是直接解析&lt;code&gt;zhujie&lt;/code&gt;字段的二进制，翻译成字符串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;猜测这个二进制是什么：&lt;/strong&gt;有这么几种可能，&lt;code&gt;对象&lt;/code&gt;，直接把数据所对应的对象存到数据库，以二进制的方式；&lt;code&gt;字符串&lt;/code&gt;，把字符串转换成二进制数据写入数据库；&lt;code&gt;加密&lt;/code&gt;，这也是最头疼的方式，如果真的加密了，必须去源码中找到加密算法和相应的解密密钥。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;试验：&lt;/strong&gt;试着猜想一下，这种数据库中可能存放对象吗？我感觉以我的经验来说不大可能，这种存对象的方式，平台适用性太低。如果使用java存的对象，只能用java读出来，那么这个库完全无法再别的（如：&lt;code&gt;IOS&lt;/code&gt;）平台上使用。这种不是不行只是不太理想。当时我猜测的最大可能是&lt;code&gt;字符串&lt;/code&gt;的二进制格式，因为我以为这种数据没必要加密。所以，我就试着验证了一下。如何读数据库就不说了，&lt;a href=&quot;http://febsky.me/2016/05/10/2016-05-10-Android%E6%93%8D%E4%BD%9CSQLite%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%96%B9%E6%B3%95/&quot;&gt;参考&lt;/a&gt;；&lt;/p&gt;
&lt;p&gt;从数据库以二进制的方式读入，然后用String解码。一运行，我靠，兄弟乱码？？&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-46ede5003eddb3c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;测试代码及运行结果&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从上图看出，以我多年解决乱码的经验，出现乱码&lt;font color=&quot;#ff0000&quot;&gt;大多数&lt;/font&gt;是由于编码方式不正确引起的。吆西，编码那我改还不行吗？&lt;/p&gt;
&lt;p&gt;于是有了下图的测试代码：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-20a47f5fea639b06.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;对二进制进行不同的字符编码&quot;&gt;&lt;/p&gt;
&lt;p&gt;额。。。全是乱码，从查词的结果来看一定包含中文，我知道的能处理中文的常用编码也就这么三种，你说全是乱码。这。。。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;结果：&lt;/strong&gt;没办法猜想错误，0.0，只能继续猜测呗。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;继续猜测：&lt;/strong&gt; 会不会数据库存放的是Base64的二进制方式，作者会不会用Base64的方式对数据进行了简单的加密？ 但是仔细一想，Base64主要作用是把二进制转换成字符来显示和表达的。把一个字符串，转换成二进制在转换成Base64再换成二进制，再存储。好像能有这种想法的人有点，那啥吧？？既然没有别的办法也只能试试喽。测试代码就不给了，就是Base64的基本操作，就是流程绕了点，后来测试发现也是乱码。（:- &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;继续猜想：&lt;/strong&gt;看了数据库的这个字段的数据真的加密了。只从数据库入手好像无法解决。加密有难有易，但是无论如何，他既然会显示到界面的数据是正常的明文，说明即使加密了，apk源码中也有解密代码。看了现在找到这个解密的代码是非常关键的。这个解密的代码也有难有易，如果做的简单点就是一个java的Util类。如果做的难了，用jni做到so文件中。但愿他在java中吧。这样反编译起来还简单些。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;测试：&lt;/strong&gt;要把apk中的dex拿出来反编译成jar，然后查看这个jar中的源文件。具体如何反编译拿到jar，不再给出，可以参考这个。&lt;a href=&quot;http://febsky.me/2016/07/05/2016-07-05-Android%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E7%94%A8%E5%88%B0%E7%9A%84%E5%B7%A5%E5%85%B7/&quot;&gt;参考&lt;/a&gt; 至于查看浏览这个jar包中的java代码，我主要借助两个工具&lt;code&gt;jd-gui-1.3.0.jar&lt;/code&gt;和&lt;code&gt;jadx-0.6.0&lt;/code&gt;为什么要接着两个，我能力有限，查看反编译后的java代码，如果这个代码被混淆了，读起来相当困难，而这两个tool反编译后的java代码各有优缺点。前者有代码跟进功能，后者的代码反编译的可读性比较好，但是后者代码综合性比较强，比如能简写的他会简写。这样读起来也比价困难。结合来看就轻松多了。&lt;/p&gt;
&lt;p&gt;好，我们可以看到最终数据会被现实到，汉字查询结果页面。如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-f09c0a99a31dbbd3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;汉字查询结果页面2&quot;&gt;&lt;/p&gt;
&lt;p&gt;那么我们找到这个页面，然后就可以进行数据分析了，接下来的问题，这个页面怎么找？？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;猜测：&lt;/strong&gt;这是个Activity，既然是详情页面，那么根据中国，程序员的英语水平命名的话，应该和Detail  和 Activity有关。好找一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-af8c48a54cb045d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;jd-gui显示jar包文件&quot;&gt;&lt;/p&gt;
&lt;p&gt;如图所示，可以看到，这个jar里面大多数是没有用的，都是些第三方的引入。被打包进来的。真正我们写的代码在如图箭头指向的包中。是主要的Activity。找来找去，还真找到了一个叫&lt;code&gt;DetailActivity.class&lt;/code&gt;的类。哈哈…&lt;/p&gt;
&lt;p&gt;打开一看彻底懵逼：全是a啊b啊的。这特么怎么看。没办法，反编译比人的工程代码，需要极大的耐心。慢慢来看，有些小技巧在里面，我们并不需要全看，要想理解大体思路，也需要一定的代码基础。至少自己独立架构过一个项目。或者参与过很多项目。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路：&lt;/strong&gt;接下来要做的就是&lt;code&gt;找到显示着段文字的View&lt;/code&gt;—&amp;gt;&lt;code&gt;找到这个View的赋值过程&lt;/code&gt;—&amp;gt;&lt;code&gt;找到这个值得来源&lt;/code&gt;—&amp;gt;&lt;code&gt;这个来源中一定包含解密过程&lt;/code&gt;这个思路想起了简单，但是操作起来想当复制，我们可以看到这个&lt;code&gt;DetailActivity.class&lt;/code&gt;类大约有几千行代码啊。如何找？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;猜测：&lt;/strong&gt;据我所知，在Android常用的显示文本的控件也就那么三个&lt;code&gt;TextView&lt;/code&gt;,&lt;code&gt;EditText&lt;/code&gt;,&lt;code&gt;WebView&lt;/code&gt;。到底是哪个，我们要借助于一个工具叫&lt;code&gt;Android Device Monitor&lt;/code&gt; 这是分析比人程序布局的利器啊。如何使用？&lt;a href=&quot;http://febsky.me&quot;&gt;这个地方先空一下，改天补上&lt;/a&gt; 因为用起来不难，但是描述起来很烦人。来看分析截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-03080b6586feeab3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;字典详情页面分析截图&quot;&gt;&lt;/p&gt;
&lt;p&gt;从红色箭头标出的部分看，6不6，这界面用了什么View，View的层级关系，View的Id都能得到。拿到了这些再去&lt;code&gt;DetailActivity.class&lt;/code&gt;中分析是不是就简单多了。可以确定这个就是为WebView赋值而已嘛。找到WebView的赋值的地方，也就找到了数据源了。这时候就兴奋的去&lt;code&gt;DetailActivity.class&lt;/code&gt;中找&lt;code&gt;WevView&lt;/code&gt;了，我去，没有？？？why?  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;猜测：&lt;/strong&gt;页面用了Fragment，数据在Fragment中，界面用了组合View，WebView在组合View中。分析到这里似乎难以用一种固定的方式分析了，好像要凭感觉？怎么办，转向layout 的xml文件，找点突破口。这时候就用到jadx出厂了，为啥？自己对比。&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-2c872733bf8ae4ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;jadx&quot;&gt;&lt;/p&gt;
&lt;p&gt;从图片中可以看到，我们很容易拿到了，这个activity的布局文件。打开它。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-05ff260e04d31ffd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;detail.xml&quot;&gt;&lt;/p&gt;
&lt;p&gt;分析后发现果然，主要的数据都放到了ViewPager中。好啊，接下来的主要工作就转战这个ViewPager，在这个DetailActivity中可定有这个Viewpager的引用。继续用jadx。搜索这个ViewPager的id找到，他的引用。如下图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-12f564ae048dc4d6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;查找ViewPager的引用&quot;&gt;&lt;/p&gt;
&lt;p&gt;好嘛，兄弟，你在Activity中的引用叫this.B啊，让我这个好找啊。既然找到了ViewPager，我们想要ViewPager中的每一个Pager的数据，怎么找，找啥？找&lt;code&gt;Adapter&lt;/code&gt;不论是啥，一定会有setAdapter这个方法。继续搜索。&lt;code&gt;this.B.setAdapter&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-705ffe5ad3a0df45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;查找Adapter的设置方法。&quot;&gt;&lt;/p&gt;
&lt;p&gt;一切如上图。其实感觉好的可以看到我们的方框框起来的就是我们最终要找的。好这个PagerAdapter的名字竟然叫&lt;code&gt;j&lt;/code&gt;。Adapter有两种方式存在，一种是单独的文件，另一种是匿类的方式，这就是我们的开发常识了。先猜测就在本文件中吧。搜索&lt;code&gt;Adapter&lt;/code&gt;.如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-071570f8fa8b391f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Adapter搜索。&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上图中我们可以分析出ViewPager的View集合了，&lt;code&gt;this.a.C&lt;/code&gt;认真读下代码，这个&lt;code&gt;this&lt;/code&gt;指的是&lt;code&gt;j&lt;/code&gt;也即是PagerAdapter的实例对象。而a，指的是&lt;code&gt;DetailActivity.this&lt;/code&gt;,好了，集合对象找到了就是DetailActivity中的&lt;code&gt;C&lt;/code&gt;,搜索&lt;code&gt;this.C&lt;/code&gt;,结果如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-cbd0f05f1a4c0c23.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;搜索this.C ViewPager的Pager页&quot;&gt;&lt;/p&gt;
&lt;p&gt;图片中包含唯一的自定义View就是&lt;code&gt;DetailContentView&lt;/code&gt;,打开它看看。哈，果然WebView就在这里面。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-919f8b4f13a69456.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;DetailContentView&quot;&gt;&lt;/p&gt;
&lt;p&gt;这货对外暴露的设置内容的方法为&lt;code&gt;a(string)&lt;/code&gt;,好。在DetailActivity中可以看到：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;this.U = (DetailContentView) inflate.findViewById(R.id.detail_zhujie_id);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;this.V = (DetailContentView) inflate.findViewById(R.id.detail_xiangjie);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;this.W = (DetailContentView) inflate.findViewById(R.id.detail_guhanyu);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;this.X = (DetailContentView) inflate.findViewById(R.id.detail_kangxi);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;this.Y = (DetailContentView) inflate.findViewById(R.id.detail_shuowen);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;this.Z = (DetailContentView) inflate.findViewById(R.id.detail_wys_id);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们从这里面随便拿一个分析就行。我就选&lt;code&gt;this.W&lt;/code&gt;吧。这个对应详情页的&lt;code&gt;古汉语&lt;/code&gt;展开的详情。&lt;/p&gt;
&lt;p&gt;那么这个this.W要想设置数据可定调用了a方法。搜索this.W 大小写敏感。注意自己过滤一些无关的搜索。结果可以看到唯一符合条件的是：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-991c2a7d3a86a0a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;搜索赋值方法&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，这个&lt;code&gt;p.c(this,this.aX.c)+this.aX.c)&lt;/code&gt;就是获取数据源的方法。猜测，这个&lt;code&gt;p.c&lt;/code&gt;方法可能是某个帮助类。对数据进行处理，也可能是某个查询类根据传入的参数来查询，到底是什么呢？我们用jd-gui来帮助我们跟进代码。来跟进参数&lt;code&gt;this.aX.c&lt;/code&gt;打这个东西。（P.S.这个p.c也是相当有用的。剧透一下用于字符串的格式化）如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-10471617b0ac68ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;数据库查询类&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看到 aX就是上图中a这个类的对象，而c就是这个对象的成员，在结合上面的拼音，我们断定，这个a类是和数据库表结构对应的Bean类。进而我断定这个a的外部类就是数据库表的查询类。查询方法在上面。数据库表结构如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-894d14f7271f0109.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;古汉语的表结构&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上上个图中，我们从a类的定义往上看，猜我看到了啥。哈哈，&lt;code&gt;getBlob&lt;/code&gt;方法，很多时候感觉还是很重要的。一种熟悉的感觉有木有。一开始的时候我们就是用他读的数据的那个二进制字段。从这行代码往下读，看不懂？我也看不懂。但是我读出来，这个a类中的c字段就是我们要的东西。继续看这个c是怎么获取来的？&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;locala.c = q.a(paramList,i)    //paramlist 就是我们的二进制byte数组，是数组的长度，哈哈，这个方法就是解密方法喽。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们要做的就是找到，这个方法，把他提取出来，就能解密数据所有的二进制了。这是个静态方法，是比较独立的工具类。所以提取没有什么难度？但是也遇到很多问题，关键是有些加密代码看不懂。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;万里长征走一半了？No，才刚刚开始。还记得我们要干嘛嘛？要拿到解密后数据的数据。继续吧：&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;jd-gui&lt;/code&gt;跟进代码。&lt;code&gt;q.a(byte[],int)&lt;/code&gt;。反编译查找方法时候一定注意方法签名。有可能都是特么的&lt;code&gt;a&lt;/code&gt; 但都是重载，别找错了。这个方法传递一个加密后的二进制数据和他的长度进去，返回一个解密后的字符串。&lt;/p&gt;
&lt;p&gt;我发现不能再往下写了，再写人家的加密算法就给拿出来了。&lt;/p&gt;
&lt;p&gt;来看这个方法的签名：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-28a54a1822fadfdc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;解密方法签名&quot;&gt;&lt;br&gt;&lt;strong&gt;P.S.看反编译后的代码要学会自动过滤无关代码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这个方法有用的即使三行。而这三行中唯一不知道的就是d也就是&lt;code&gt;d.getBytes()&lt;/code&gt;中的d，继续分析这个类看看这个d是如何获取的。a(byte[],int)是个静态方法，所以d不可能在构造方法中初始化，一定在这个方法内初始化的，为啥找不到？？？对比&lt;code&gt;jadx&lt;/code&gt;，效果如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-511c8c94a8170219.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;jadx反编译a方法&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上图可以看到，jadx的反编译结果，比jd-gui多了一个调用&lt;code&gt;a()&lt;/code&gt;a的空方法，这才符合我的猜想嘛。接下来看看这个a()的定义，只要能拿到d的值。这个解密过程就算完成了。哈哈，这个不能贴了，这是人家的密钥生成方式。不过这个方法我是真心看不懂，不过没关系，这个方法没有引用其他的东西，直接拷出来，引入生成一个d就行了。至此解密完成。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/797798-88dd20821d84d2a8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;解密后的数据&quot;&gt;&lt;/p&gt;
&lt;p&gt;这不太对啊。这数据格式太丑了，还包含什么乱七八糟的字符？要处理这些就是前面所说的字符串格式化。加入css样式和加入html标签。这个过程更是相当复杂。各种猜测和尝试，其中还借助了Smali文件，重新打包，打印log等。不过还好，最终成功了，我给封装成&lt;code&gt;ExplainUtil&lt;/code&gt;,哈哈他的app中也是这么命名的，不过混淆过后就成了a，b，c。。。这种乱七八糟的东西了。&lt;/p&gt;
&lt;p&gt;这篇文章写了五个小时~~~&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://febsky.me&quot;&gt;http://febsky.me&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;开篇之前，我一直考虑这算不算侵权？只是兴趣，如果有人告知侵权的话，立马删除。&lt;/p&gt;
&lt;p&gt;我所说的数据不是指拿别人app中的图片资源。而是程序运行所需要的数据。&lt;/p&gt;
&lt;p&gt;App中的数据无非两种，一种是网络数据，一种是本地数据。网络请求我们一般用抓包工具（Mac上的C
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="反编译" scheme="http://febsky.me/categories/Android/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="反编译" scheme="http://febsky.me/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
      <category term="解密" scheme="http://febsky.me/tags/%E8%A7%A3%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>NodeJs包管理npm</title>
    <link href="http://febsky.me/2016/07/27/2016-07-27-NodeJs%E5%8C%85%E7%AE%A1%E7%90%86npm/"/>
    <id>http://febsky.me/2016/07/27/2016-07-27-NodeJs包管理npm/</id>
    <published>2016-07-27T07:30:35.000Z</published>
    <updated>2016-07-27T07:37:04.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;node 版本更新 n 的使用&lt;/p&gt;
&lt;p&gt; node有一个模块叫 &lt;code&gt;n&lt;/code&gt;，是专门用来管理node.js的版本的。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;$ npm install -g n&lt;/code&gt;  安装n模块：&lt;/p&gt;
&lt;p&gt; &lt;code&gt;$ sudo n stable&lt;/code&gt;  升级node.js到最新稳定版&lt;/p&gt;
&lt;p&gt; &lt;code&gt;$ sudo n 5.8.0&lt;/code&gt;   升级node.js到指定版本号&lt;/p&gt;
&lt;p&gt; 输入n后输出当前已经安装的node版本以及正在使用的版本（前面有一个o），你可以通过移动上下方向键来选择要使用的版本，最后按回车生效。&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ n&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     6.0.0 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; o   5.8.0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;npm的常用命令&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm -v          &lt;span class=&quot;comment&quot;&gt;#显示版本，检查npm 是否正确安装。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install express   &lt;span class=&quot;comment&quot;&gt;#安装express模块&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install -g express  &lt;span class=&quot;comment&quot;&gt;#全局安装express模块&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm list         &lt;span class=&quot;comment&quot;&gt;#列出已安装模块&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm show express     &lt;span class=&quot;comment&quot;&gt;#显示模块详情&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm update        &lt;span class=&quot;comment&quot;&gt;#升级当前目录下的项目的所有模块&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm update express    &lt;span class=&quot;comment&quot;&gt;#升级当前目录下的项目的指定模块&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm update -g express  &lt;span class=&quot;comment&quot;&gt;#升级全局安装的express模块&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm uninstall express  &lt;span class=&quot;comment&quot;&gt;#删除指定的模块&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm update –g  更新你已经安装的NPM库&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;node 版本更新 n 的使用&lt;/p&gt;
&lt;p&gt; node有一个模块叫 &lt;code&gt;n&lt;/code&gt;，是专门用来管理node.js的版本的。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;$ npm install -g n&lt;/code&gt;  安装n模块：&lt;/p&gt;
&lt;p&gt; &lt;c
    
    </summary>
    
      <category term="Nodejs" scheme="http://febsky.me/categories/Nodejs/"/>
    
      <category term="npm" scheme="http://febsky.me/categories/Nodejs/npm/"/>
    
    
      <category term="Nodejs" scheme="http://febsky.me/tags/Nodejs/"/>
    
      <category term="npm" scheme="http://febsky.me/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>Android中反编译Smali文件解读</title>
    <link href="http://febsky.me/2016/07/26/2016-07-26-Android%E4%B8%AD%E5%8F%8D%E7%BC%96%E8%AF%91Smali%E6%96%87%E4%BB%B6%E8%A7%A3%E8%AF%BB/"/>
    <id>http://febsky.me/2016/07/26/2016-07-26-Android中反编译Smali文件解读/</id>
    <published>2016-07-26T10:06:35.000Z</published>
    <updated>2016-07-27T09:22:02.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;寄存器&lt;/p&gt;
&lt;p&gt; 修改Smali时有一件很重要的事情就是要注意寄存器。如果乱用寄存器的话可能会导致程序崩溃。每个方法开头声明了registers的数量，这个数量是参数和本地变量总和。参数统一用P表示。如果是非静态方法p0代表this，p1-pN代表各个参数。如果是静态方法的话，p0-pN代表各个参数。本地变量统一用v表示。如果想要增加的新的本地变量，需要在方法开头的registers数量上增加相应的数值。&lt;/p&gt;
&lt;p&gt;比如下面这个方法：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; # direct methods&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.method public constructor &amp;lt;init&amp;gt;()V&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    .registers 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 .prologue&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 .line 7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    invoke-direct &amp;#123;p0&amp;#125;, Ljava/lang/Object;-&amp;gt;&amp;lt;init&amp;gt;()V&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    return-void&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.end method&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为这不是静态方法，所以p0代表this。如果想要增加一个新的本地变量，比如v0。就需要把.registers 1改为.registers 2。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有两种方式指定一个方法中有多少寄存器是可用的&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.registers&lt;/code&gt; 使用这个指令指定方法中寄存器的总数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;.locals&lt;/code&gt; 使用这个指定表明方法中非参寄存器的总数，放在方法的第一行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/JesusFreke/smali/wiki/Registers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/JesusFreke/smali/wiki/Registers&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;给原程序增加大量逻辑的办法&lt;/p&gt;
&lt;p&gt;我非常不建议在程序原有的方法上增加大量逻辑，这样可能会出现很多寄存器方面的错误导致编译失败。比较好的方法是：把想要增加的逻辑先用java写成一个apk，然后把这个apk反编译成smali文件，随后把反编译后的这部分逻辑的smali文件插入到目标程序的smali文件夹中，然后再在原来的方法上采用invoke的方式调用新加入的逻辑。这样的话不管加入再多的逻辑，也只是修改了原程序的几行代码而已。这个思路也是很多重打包病毒惯用的伎俩，确实非常方便好用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方法中出现的关键字&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt; .method &amp;lt;访问权限&amp;gt;[修饰关键字]&amp;lt;方法原型&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;.locals&amp;gt;                    # 指定了使用的局部变量个数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [.parameter]                 # 指定了方法的参数,如果有三个参数就有三个.parameter&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [.prologue]                  # 指定了代码开始段,混淆过的代码可能去掉了改段落&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [.line]                      # 指定了该处指令在源代码中的行数,混淆过的代码可能会去掉,主要用于调试。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;代码体&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.end method&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;invoke-super　　调用父函数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;const/high16 v0, 0x7fo3　　把0x7fo3赋值给v0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;invoke-direct　　调用函数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;return-void　　函数返回void&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;new-instance　　创建实例&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;iput-object　　对象赋值&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;iget-object　　调用对象&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;invoke-static　　调用静态函数&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;【参考文章】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; Smali 语法：&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;http://www.cnblogs.com/lee0oo0/p/3728271.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/lee0oo0/p/3728271.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;http://dalufan.com/2015/01/14/android-Smail-learn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dalufan.com/2015/01/14/android-Smail-learn/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; 官网文档：&lt;br&gt; &lt;a href=&quot;http://pallergabor.uw.hu/androidblog/dalvik_opcodes.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;转载官网&lt;/a&gt; 、&lt;a href=&quot;https://source.android.com/devices/tech/dalvik/dalvik-bytecode.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android官网，科学上网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;a href=&quot;http://zke1ev3n.me/2015/12/02/Android-Dalvik%E5%AD%97%E8%8A%82%E7%A0%81%E8%A7%A3%E6%9E%90/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dalvik字节码&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;寄存器&lt;/p&gt;
&lt;p&gt; 修改Smali时有一件很重要的事情就是要注意寄存器。如果乱用寄存器的话可能会导致程序崩溃。每个方法开头声明了registers的数量，这个数量是参数和本地变量总和。参数统一用P表示。如果是非静态方法p0代表this，p1-pN代表各
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="Smali" scheme="http://febsky.me/categories/Android/Smali/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="Smali" scheme="http://febsky.me/tags/Smali/"/>
    
  </entry>
  
  <entry>
    <title>Android中Notification工具类</title>
    <link href="http://febsky.me/2016/07/26/2016-07-26-Android%E4%B8%ADNotification%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>http://febsky.me/2016/07/26/2016-07-26-Android中Notification工具类/</id>
    <published>2016-07-26T03:06:35.000Z</published>
    <updated>2016-07-26T03:38:10.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xripg.com1.z0.glb.clouddn.com/2016/07/26/20160120204444199.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;131&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;132&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import android.app.Activity;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import android.app.Notification;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import android.app.NotificationManager;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import android.app.PendingIntent;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import android.content.Context;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import android.content.Intent;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import android.content.pm.PackageManager;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import android.graphics.BitmapFactory;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import android.media.RingtoneManager;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import android.net.Uri;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import android.os.Build;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import android.support.v7.app.NotificationCompat;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import com.eallcn.rentagent.R;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/**&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Author: liuqiang&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Date: 2016-07-07&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Time: 17:23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 在一些国产的手机，一定在安全管理的通知管理中打开&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * 尤其是OPPO&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public class NotificationUtil &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    protected static int notifyID = 0525; // start notification id&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    protected static int foregroundNotifyID = 0555;    //当前app是不是在用户可是界面&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public static void send(String string, Context context, Class activity) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(context);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Intent intent = new Intent(context, activity);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        PendingIntent pendingIntent = PendingIntent.getActivity(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                context,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                notifyID,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                intent,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                PendingIntent.FLAG_UPDATE_CURRENT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setContentIntent(pendingIntent);// 设置通知栏点击意图&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setContentTitle(&amp;quot;这是标题&amp;quot;);// 设置通知栏标题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setContentText(string);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setSmallIcon(R.drawable.ic_launcher);// 设置通知小ICON（5.0必须采用白色透明图片）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setTicker(string + &amp;quot;有警报！&amp;quot;); // 通知首次出现在通知栏，带上升动画效果的&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.LOLLIPOP) &amp;#123;//悬挂式Notification，5.0后显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setFullScreenIntent(pendingIntent, true);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setCategory(NotificationCompat.CATEGORY_MESSAGE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setVisibility(Notification.VISIBILITY_PUBLIC);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setLargeIcon(BitmapFactory.decodeResource(context.getResources(), R.drawable.ic_launcher));// 设置通知大ICON&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setWhen(System.currentTimeMillis());// 通知产生的时间，会在通知信息里显示，一般是系统获取到的时间&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setPriority(NotificationCompat.PRIORITY_MAX); // 设置该通知优先级&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);//在任何情况下都显示，不受锁屏影响。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setAutoCancel(true);// 设置这个标志当用户单击面板就可以让通知将自动取消&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setOngoing(false);// ture，设置他为一个正在进行的通知。他们通常是用来表示一个后台任务,用户积极参与(如播放音乐)或以某种方式正在等待,因此占用设备(如一个文件下载,同步操作,主动网络连接)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        // 向通知添加声音、闪灯和振动效果的最简单、最一致的方式是使用当前的用户默认设置，使用NotificationCompat.DEFAULT_ALL属性，可以组合&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setVibrate(new long[]&amp;#123;0, 100, 500, 100&amp;#125;);//振动效果需要振动权限&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Uri defaultSoundUrlUri = RingtoneManager&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                .getDefaultUri(RingtoneManager.TYPE_NOTIFICATION); //声音&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setSound(defaultSoundUrlUri);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mBuilder.setDefaults(NotificationCompat.DEFAULT_LIGHTS);//闪灯&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        NotificationManager mNotificationManager = (NotificationManager) context.getSystemService(Activity.NOTIFICATION_SERVICE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //Notification notification = mBuilder.getNotification();//API 11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Notification notification = mBuilder.build();//API 16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mNotificationManager.notify(1, notification);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    public static void sendNotification(Context context, String message, boolean isForeground) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        NotificationManager notificationManager = (NotificationManager) context&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                .getSystemService(Context.NOTIFICATION_SERVICE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        try &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            String notifyText = message;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            PackageManager packageManager = context.getPackageManager();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            String appName = (String) packageManager&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    .getApplicationLabel(context.getApplicationInfo());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            // notification title&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            String contentTitle = appName;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            String packageName = context.getApplicationInfo().packageName;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Uri defaultSoundUrlUri = RingtoneManager&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    .getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            // create and send notification&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            android.support.v4.app.NotificationCompat.Builder mBuilder = new android.support.v4.app.NotificationCompat.Builder(context)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    .setSmallIcon(context.getApplicationInfo().icon)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    .setSound(defaultSoundUrlUri)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    .setWhen(System.currentTimeMillis())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    .setAutoCancel(true);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Intent msgIntent = context.getPackageManager()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    .getLaunchIntentForPackage(packageName);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            PendingIntent pendingIntent = PendingIntent.getActivity(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    context,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    notifyID,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    msgIntent,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    PendingIntent.FLAG_UPDATE_CURRENT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setPriority(NotificationCompat.PRIORITY_MAX); // 设置该通知优先级&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);//在任何情况下都显示，不受锁屏影响。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setContentTitle(contentTitle);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setTicker(notifyText);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setContentText(notifyText);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setContentIntent(pendingIntent);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setFullScreenIntent(pendingIntent, true);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setOnlyAlertOnce(false);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mBuilder.setDefaults(NotificationCompat.DEFAULT_LIGHTS);//闪灯&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Notification notification = mBuilder.build();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            if (isForeground) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                notificationManager.notify(foregroundNotifyID, notification);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                notificationManager.cancel(foregroundNotifyID);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125; else &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                notificationManager.notify(notifyID, notification);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125; catch (Exception e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xripg.com1.z0.glb.clouddn.com/2016/07/26/20160120204444199.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="Notification" scheme="http://febsky.me/categories/Android/Notification/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="Notification" scheme="http://febsky.me/tags/Notification/"/>
    
  </entry>
  
  <entry>
    <title>SublimeMac下的使用</title>
    <link href="http://febsky.me/2016/07/26/2016-07-26-SublimeMac%E4%B8%8B%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://febsky.me/2016/07/26/2016-07-26-SublimeMac下的使用/</id>
    <published>2016-07-26T01:53:35.000Z</published>
    <updated>2016-07-26T02:06:28.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Smali 语法高亮插件&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ShaneWilton/sublime-smali&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ShaneWilton/sublime-smali&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;快捷键&lt;/p&gt;
&lt;p&gt;| 快捷键        | 功能         |&lt;br&gt;| ————- |:————-:|&lt;br&gt;| ⌘ /   | 注释|&lt;br&gt;| ⌘⌥F   | 替换|&lt;br&gt;| ⌘T    |前往文件|&lt;br&gt;| ⌘KK   | 从光标处删除至行尾|&lt;br&gt;| ⌘K⌫   | 从光标处删除至行首|&lt;br&gt;| ⌘L    |选择行 (重复按下将下一行加入选择)|&lt;br&gt;| ⌘D    |选择词 (重复按下时多重选择相同的词进行多重编辑)|&lt;br&gt;| ⌘⇧F   | 在所有打开的文件中进行查找|&lt;br&gt;| ⌘⌥1   | 拆分窗口单列 |&lt;br&gt;| ⌘⌥2   | 拆分窗口双列 |&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;Smali 语法高亮插件&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ShaneWilton/sublime-smali&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Sha
    
    </summary>
    
      <category term="Sublime" scheme="http://febsky.me/categories/Sublime/"/>
    
      <category term="工具" scheme="http://febsky.me/categories/Sublime/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://febsky.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Mac" scheme="http://febsky.me/tags/Mac/"/>
    
      <category term="Sublime" scheme="http://febsky.me/tags/Sublime/"/>
    
  </entry>
  
  <entry>
    <title>Android反编译后重新打包apk</title>
    <link href="http://febsky.me/2016/07/25/2016-07-25-Android%E5%8F%8D%E7%BC%96%E8%AF%91%E5%90%8E%E9%87%8D%E6%96%B0%E6%89%93%E5%8C%85apk/"/>
    <id>http://febsky.me/2016/07/25/2016-07-25-Android反编译后重新打包apk/</id>
    <published>2016-07-25T07:53:35.000Z</published>
    <updated>2016-07-26T10:03:28.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;为什么要反编译别人的代码？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人家比咱写的好，学习&lt;/li&gt;
&lt;li&gt;看中了人家的某个控件，抄袭&lt;/li&gt;
&lt;li&gt;看中了人家的本地数据库，想要&lt;/li&gt;
&lt;li&gt;但是人家的本地数据库加密了，要读源码才能解密&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;为什么要打包别人的apk？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;反编译后的代码有些地方读不通顺。想添加log。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;一个基本的逆向工程的流程。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;apktool反编译apk –&amp;gt; 修改图片等资源文件（或者smali源码）–&amp;gt; apktool 打包apk –&amp;gt; 对打包好的apk用jarsigner签名 [–&amp;gt; zipalign优化apk，最后这步可选操作] &lt;/p&gt;
&lt;p&gt;分别对应得详细操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;apktool反编译apk&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ apktool d test.apk&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改图片，填好string.xml,修改smali&lt;/p&gt;
&lt;p&gt;详细操作，尽情的折腾吧，隐藏某个view，添加某个view。&lt;br&gt;&lt;a href=&quot;https://gold.xitu.io/entry/5745388cdf0eea0063b494bb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一篇有用的文章，后来补充&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;apktool 打包&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apktool b test&lt;/code&gt; 这里的test是反编译test.apk 后生成的文件夹。最终的生成的新的未签名的apk的路径为&lt;code&gt;./test/dist/test.apk&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用你自己的证书对别人的apk进行签名&lt;/p&gt;
&lt;p&gt;这是当然了，你反编译了比人的app，可定拿不到人家的证书，但是Android系统对没有用证书签名的apk是不允许安装的。这时候我们自己生成一个证书。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;第一步：生成RSA密钥对 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;keytool -genkeypair -alias adorkable_alias -keyalg RSA -validity &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; -keystore adorkable.keystore &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-genkeypair 指定生成密钥对 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-alias 密钥对的别名 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-keyalg 密钥对用于的算法，这里用的是RSA &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-validity 密钥对的有效期，单位为天 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-keystore 密钥对存储的文件名 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;输入后，根据提示输入相应的内容就好了。 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;第二步：对未签名的apk进行签名 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jarsigner -verbose -keystore adorkable.keystore -signedjar result_singed.apk my_unsigned.apk adorkable_alias &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-verbose 输出签名详细信息 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-keystore 指定密钥对的存储路径 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-signedjar 后面三个参数分别是 签名后的APK包 未签名的APK包 和 密钥对的别名 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;签名时，会要求输入密钥对的密码，这个是你在生成密钥时输入的密码&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;strong&gt;到这里就可以用adb install 将app安装到手机里了&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;优化apk包 &lt;/p&gt;
&lt;p&gt;这一步是可选的，用来将apk包进行整理，以适应设备的读取等&lt;br&gt;zipalign -f -v 4 test.apk test_zip.apk &lt;/p&gt;
&lt;p&gt;-f 强制覆盖已有的文件&lt;br&gt;-v 输出详细内容&lt;br&gt;4 指定档案整理的字节数，一般为4，及32位。如果以后android的设备有64位的，可能要改成8吧。&lt;br&gt;Magick.apk 是未整理的apk文件名&lt;br&gt;Magick_zip.apk 是整理后的apk文件名 &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;为什么要反编译别人的代码？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;人家比咱写的好，学习&lt;/li&gt;
&lt;li&gt;看中了人家的某个控件，抄袭&lt;/li&gt;
&lt;li&gt;看中了人家的本地数据库，想要&lt;/li&gt;
&lt;li&gt;但是人家的本地数据库加密了，要读源码才能解密&lt;/li
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="反编译" scheme="http://febsky.me/categories/Android/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="反编译" scheme="http://febsky.me/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
      <category term="打包" scheme="http://febsky.me/tags/%E6%89%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>Android反编译后的文件位置</title>
    <link href="http://febsky.me/2016/07/22/2016-07-22-Android%E5%8F%8D%E7%BC%96%E8%AF%91%E5%90%8E%E7%9A%84%E6%96%87%E4%BB%B6%E4%BD%8D%E7%BD%AE/"/>
    <id>http://febsky.me/2016/07/22/2016-07-22-Android反编译后的文件位置/</id>
    <published>2016-07-22T03:06:35.000Z</published>
    <updated>2016-07-22T03:39:26.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;R.java &lt;/p&gt;
&lt;p&gt;反编译后这个文件找不到了，但是在Activity中用的是是对应资源的id的数字表示，如何找到资源。在反编译后的&lt;code&gt;res/values/public.xml&lt;/code&gt; 中可以找到映射关系。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;反编译 非常有趣。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;R.java &lt;/p&gt;
&lt;p&gt;反编译后这个文件找不到了，但是在Activity中用的是是对应资源的id的数字表示，如何找到资源。在反编译后的&lt;code&gt;res/values/public.xml&lt;/code&gt; 中可以找到映射关系。&lt;/p&gt;
&lt;/li&gt;
&lt;/
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="反编译" scheme="http://febsky.me/categories/Android/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="反编译" scheme="http://febsky.me/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>adb命令行的使用</title>
    <link href="http://febsky.me/2016/07/21/2016-07-21-Android-adb%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://febsky.me/2016/07/21/2016-07-21-Android-adb的使用/</id>
    <published>2016-07-21T02:50:44.000Z</published>
    <updated>2016-07-22T10:40:26.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看当前Activity堆栈信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ adb shell dumpsys activity activities&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看未root手机的/data/data/com.xxx.xxx/ 下的内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ adb shell&lt;/code&gt;&lt;br&gt;&lt;code&gt;shell@R9:/ $ run-as com.xxx.xxx&lt;/code&gt; &lt;/p&gt;
&lt;p&gt; com.xxx.xxx 是包名，并且这个包名的APP处于debug模式&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;查看当前Activity堆栈信息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ adb shell dumpsys activity activities&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看未root手机的/data/data/com.xxx.xxx/ 
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="adb" scheme="http://febsky.me/categories/Android/adb/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="adb" scheme="http://febsky.me/tags/adb/"/>
    
  </entry>
  
  <entry>
    <title>PopupWindow点击空白处隐藏</title>
    <link href="http://febsky.me/2016/07/20/2016-07-20-PopupWindow%E7%82%B9%E5%87%BB%E7%A9%BA%E7%99%BD%E5%A4%84%E9%9A%90%E8%97%8F/"/>
    <id>http://febsky.me/2016/07/20/2016-07-20-PopupWindow点击空白处隐藏/</id>
    <published>2016-07-20T10:15:56.000Z</published>
    <updated>2016-07-20T11:18:22.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;方法一&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mPopupWindow.setBackgroundDrawable(new BitmapDrawable());    //这个BitmapDrawable废弃了可以用下面的这个&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//mPopupWindow.setBackgroundDrawable(new BitmapDrawable(context.getResources(), (Bitmap) null));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mPopupWindow.setOutsideTouchable(true);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;监听Activity的OnTouchEvent &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;@Override&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;public boolean onTouchEvent(MotionEvent event) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if (popupWindow != null &amp;amp;&amp;amp; popupWindow.isShowing()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        popupWindow.dismiss();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        //popupWindow = null;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    return super.onTouchEvent(event);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;点击空白处的时候让PopupWindow消失的一点说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关于PopupWindow最搞笑的地方是setOutsideTouchable方法，原本以为如果你setOutsideTouchable(true)则点击PopupWindow之外的地方PopupWindow会消失，其实这玩意儿好像一点用都没有。&lt;/p&gt;
&lt;p&gt;要让点击PopupWindow之外的地方PopupWindow消失你需要调用setBackgroundDrawable(new BitmapDrawable());&lt;/p&gt;
&lt;p&gt;设置背景，为了不影响样式，这个背景是空的。还可以这样写，觉得这样要保险些：&lt;/p&gt;
&lt;p&gt;setBackgroundDrawable(new ColorDrawable(0x00000000));&lt;/p&gt;
&lt;p&gt;背景不为空但是完全透明。如此设置还能让PopupWindow在点击back的时候消失。其实一直觉得很奇怪，不明白为什么一个背景会影响点击事件，只知道这样用可&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;方法一&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;di
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android显示HTML格式</title>
    <link href="http://febsky.me/2016/07/18/2016-07-18-Android%E6%98%BE%E7%A4%BAHTML%E6%A0%BC%E5%BC%8F/"/>
    <id>http://febsky.me/2016/07/18/2016-07-18-Android显示HTML格式/</id>
    <published>2016-07-18T09:34:30.000Z</published>
    <updated>2016-07-18T09:45:48.000Z</updated>
    
    <content type="html">&lt;p&gt;实现如下效果：&lt;/p&gt;
&lt;p&gt;Hello! &lt;font color=&quot;red&quot;&gt;小傻&lt;/font&gt;You have 5 new messages.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在&lt;code&gt;string.xml&lt;/code&gt;中&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;string name=&amp;quot;welcome_messages&amp;quot;&amp;gt;&amp;lt;![CDATA[Hello! &amp;lt;font color=&amp;quot;#ff0000&amp;quot;&amp;gt;%1$s&amp;lt;/font&amp;gt;You have %2$d new messages.]]&amp;gt;&amp;lt;/string&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意html中的引号，如果用单引号就要加转译字符&lt;code&gt;\&lt;/code&gt;,为了方便就用双引号吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在Activity中动态获取并设置&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Resources resources = getResources();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;String htmlStr = resources.getString(R.string.welcome_messages,&amp;quot;小傻&amp;quot;,5);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Spanned spannedText = Html.fromHtml(htmlStr);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;textView.setText(spannedText);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; 其实上面的代码可以写成一行：&lt;br&gt; &lt;code&gt;textView.setText(Html.fromHtml(getResources().getString(R.string.welcome_messages,&amp;quot;小傻&amp;quot;,5)));&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;实现如下效果：&lt;/p&gt;
&lt;p&gt;Hello! &lt;font color=&quot;red&quot;&gt;小傻&lt;/font&gt;You have 5 new messages.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在&lt;code&gt;string.xml&lt;/code&gt;中&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;stri
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>MPAndroidChart画线形图</title>
    <link href="http://febsky.me/2016/07/14/2016-07-14-MPAndroidChart%E7%94%BB%E7%BA%BF%E5%BD%A2%E5%9B%BE/"/>
    <id>http://febsky.me/2016/07/14/2016-07-14-MPAndroidChart画线形图/</id>
    <published>2016-07-14T07:34:30.000Z</published>
    <updated>2016-07-14T10:55:04.000Z</updated>
    
    <content type="html">&lt;p&gt;最近要做一个折线图，就搜到了 &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MPAndroidChart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;效果图如下&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xripg.com1.z0.glb.clouddn.com/2016/07/14/device-2016-07-14-153535.png&quot; alt=&quot;MPAndroidChart绘制后的效果图&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;gradle 引入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;compile &amp;#39;com.github.PhilJay:MPAndroidChart:v3.0.0-beta&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以下是Activity的代码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;布局文件很简单就包含一个&lt;code&gt;com.github.mikephil.charting.charts.LineChart&lt;/code&gt;标签，不再给出：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;131&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;132&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;133&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;134&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;135&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;136&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;137&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;138&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;139&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;140&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;141&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;142&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;143&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;144&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;145&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;146&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;147&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;148&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;149&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;150&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;151&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; febsky.me.testmpchart;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.graphics.Color;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.support.v7.app.AppCompatActivity;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.util.Log;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.charts.LineChart;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.components.AxisBase;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.components.Legend;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.components.XAxis;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.components.YAxis;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.data.Entry;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.data.LineData;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.data.LineDataSet;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.formatter.AxisValueFormatter;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.highlight.Highlight;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.listener.OnChartValueSelectedListener;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MultiLineActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;OnChartValueSelectedListener&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; LineChart mChart;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] mColors = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[]&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Color.rgb(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;),    &lt;span class=&quot;comment&quot;&gt;//红色&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Color.rgb(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;196&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;244&lt;/span&gt;),    &lt;span class=&quot;comment&quot;&gt;//淡蓝色&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Color.rgb(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;243&lt;/span&gt;)    &lt;span class=&quot;comment&quot;&gt;//深蓝&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; String[] mMonths = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String[]&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;1月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;2月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;3月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;4月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;5月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;6月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;7月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;8月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;9月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;10月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;11月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;12月&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        setContentView(R.layout.activity_mulit_line);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mChart = (LineChart) findViewById(R.id.chart);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mChart.setOnChartValueSelectedListener(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        initChartView();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/**-------------这里的数据不重要，主要用随机数的方式生成点坐标-------------**/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//设置模拟数据&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ArrayList&amp;lt;Entry&amp;gt; yVals = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Entry&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            yVals.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Entry(i, (&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;) (Math.random() * &lt;span class=&quot;number&quot;&gt;10000f&lt;/span&gt;)));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ArrayList&amp;lt;Entry&amp;gt; yVals2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Entry&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            yVals2.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Entry(i, (&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;) (Math.random() * &lt;span class=&quot;number&quot;&gt;10000f&lt;/span&gt;)));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        addDataSet(yVals, &lt;span class=&quot;string&quot;&gt;&quot;一居&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        addDataSet(yVals2, &lt;span class=&quot;string&quot;&gt;&quot;两居&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/**--------------------------**/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//图标的下边的指示块  图例&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Legend l = mChart.getLegend();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        l.setForm(Legend.LegendForm.LINE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        l.setXEntrySpace(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initChartView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mChart.setDrawGridBackground(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mChart.setDescription(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//右下角说明文字&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mChart.setDrawBorders(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//四周是不是有边框&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//        mChart.setBorderColor();    //边框颜色，默认黑色？&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//控制轴上的坐标绘制在什么地方 上边下边左边右边&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        XAxis xAxis = mChart.getXAxis();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xAxis.enableGridDashedLine(&lt;span class=&quot;number&quot;&gt;10f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0f&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//给整成虚线&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xAxis.setAxisMinValue(&lt;span class=&quot;number&quot;&gt;0f&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//设置轴的最小值。这样设置将不会根据提供的数据自动计算。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xAxis.setGranularity(&lt;span class=&quot;number&quot;&gt;1f&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//缩放的时候有用，比如放大的时候，我不想把横轴的月份再细分&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xAxis.setValueFormatter(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AxisValueFormatter() &amp;#123;    &lt;span class=&quot;comment&quot;&gt;//绘制横轴显示&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getFormattedValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; value, AxisBase axis)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mMonths[(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) value % mMonths.length];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getDecimalDigits&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        xAxis.setDrawLabels(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//是不是显示轴上的刻度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mChart.getAxisRight().setEnabled(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        YAxis leftAxis = mChart.getAxisLeft();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        leftAxis.setEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        leftAxis.enableGridDashedLine(&lt;span class=&quot;number&quot;&gt;10f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0f&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// enable touch gestures&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mChart.setTouchEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// if disabled, scaling can be done on x- and y-axis separately&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mChart.setPinchZoom(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// enable scaling and dragging&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mChart.setDragEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mChart.setScaleEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//一个chart中包含一个Data对象，一个Data对象包含多个DataSet对象，&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 每个DataSet是对应一条线上的所有点(相对于折线图来说)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        mChart.setData(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LineData());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ArrayList&amp;lt;Entry&amp;gt; entryList, String dataSetName)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        LineData data = mChart.getData();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = data.getDataSetCount();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            LineDataSet set = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LineDataSet(entryList, dataSetName);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            set.setLineWidth(&lt;span class=&quot;number&quot;&gt;1.5f&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            set.setCircleRadius(&lt;span class=&quot;number&quot;&gt;3.5f&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; color = mColors[count % mColors.length];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            set.setColor(color);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            set.setCircleColor(color);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            set.setValueTextSize(&lt;span class=&quot;number&quot;&gt;10f&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            set.setDrawValues(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//节点不显示具体数值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            set.setValueTextColor(color);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            set.setDrawHorizontalHighlightIndicator(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//取消横向辅助线&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            set.setDrawVerticalHighlightIndicator(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//取消纵向辅助线&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            data.addDataSet(set);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            data.notifyDataChanged();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mChart.notifyDataSetChanged();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mChart.invalidate();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onValueSelected&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Entry e, Highlight h)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Log.i(&lt;span class=&quot;string&quot;&gt;&quot;Q_M:&quot;&lt;/span&gt;, e.toString());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onNothingSelected&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;最近要做一个折线图，就搜到了 &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MPAndroidChart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;效果图如下
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="MPAndroidChart" scheme="http://febsky.me/categories/Android/MPAndroidChart/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="MPAndroidChart" scheme="http://febsky.me/tags/MPAndroidChart/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio中查看依赖库的本地存储路径</title>
    <link href="http://febsky.me/2016/07/13/2016-07-13-AndroidStudio%E4%B8%AD%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E4%B8%80%E4%B8%AAtask%E6%98%BE%E7%A4%BA%E5%87%BA%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E8%B7%AF%E5%BE%84/"/>
    <id>http://febsky.me/2016/07/13/2016-07-13-AndroidStudio中如何利用一个task显示出依赖库的本地存储路径/</id>
    <published>2016-07-13T02:39:17.000Z</published>
    <updated>2016-07-14T07:47:34.000Z</updated>
    
    <content type="html">&lt;p&gt;这两天由于公司网速慢，每次要下载v4  和 v7 包非常耗时。把gradle 改成离线模式就好多了。据说离线模式不再重新下载依赖。但是很好奇，AndroidStudio的gradle 引入的第三方库到底缓存到本地的什么位置了。&lt;/p&gt;
&lt;p&gt;可以在app目录下的&lt;code&gt;build.gradle&lt;/code&gt;的文件的最后添加：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;task showMeCache &amp;lt;&amp;lt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    configurations.compile.each &amp;#123; println it &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，在命令行切换到你的项目根目录下运行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./gradlew showMeCache&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这时候控制台就好打印出依赖库的缓存位置(下面是我显示的环信一个demo的所有的依赖库，包括lib引入，和在gradle的maven库引入的。)：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;liuqiangs-MacBook-Pro:TestHx liuqiang$ ./gradlew showMeCache&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Incremental java compilation is an incubating feature.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;:app:showMeCache&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/liuqiang/Workspace/meiliwu/TestHx/app/libs/hyphenatechat_3.1.3.jar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/appcompat-v7/23.4.0/appcompat-v7-23.4.0.aar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/liuqiang/.gradle/caches/modules-2/files-2.1/com.jakewharton/butterknife/7.0.1/d5d13ea991eab0252e3710e5df3d6a9d4b21d461/butterknife-7.0.1.jar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/design/23.4.0/design-23.4.0.aar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/animated-vector-drawable/23.4.0/animated-vector-drawable-23.4.0.aar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/support-v4/23.4.0/support-v4-23.4.0.aar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/support-vector-drawable/23.4.0/support-vector-drawable-23.4.0.aar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/recyclerview-v7/23.4.0/recyclerview-v7-23.4.0.aar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/support-annotations/23.4.0/support-annotations-23.4.0.jar&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到，v4 和 v7的支持包，是下载下来放到你本地Android sdk的extras 目录下的，所以，我猜测，可以直接从别人电脑拷贝这个文件夹的内容，然后使用gradle的离线模式编译。这样就不会再网速差的情况下去下载 v4 和 v7  。这种想法仅仅是用于 v4和v7 其他的第三方依赖库可以看到是放到 ~/.gradle/cache 目录下的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【参考文献】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/asd6340370/article/details/51829847&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在AndroidStudio中如何利用一个task显示出依赖库的本地存储路径
&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这两天由于公司网速慢，每次要下载v4  和 v7 包非常耗时。把gradle 改成离线模式就好多了。据说离线模式不再重新下载依赖。但是很好奇，AndroidStudio的gradle 引入的第三方库到底缓存到本地的什么位置了。&lt;/p&gt;
&lt;p&gt;可以在app目录下的&lt;code&gt;
    
    </summary>
    
      <category term="AndroidStudio" scheme="http://febsky.me/categories/AndroidStudio/"/>
    
      <category term="Android" scheme="http://febsky.me/categories/AndroidStudio/Android/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://febsky.me/tags/AndroidStudio/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio加快编译的方法</title>
    <link href="http://febsky.me/2016/07/12/2016-07-12-AndroidStudio%E5%8A%A0%E5%BF%AB%E7%BC%96%E8%AF%91%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://febsky.me/2016/07/12/2016-07-12-AndroidStudio加快编译的方法/</id>
    <published>2016-07-12T08:57:32.000Z</published>
    <updated>2016-07-15T11:06:16.000Z</updated>
    
    <content type="html">&lt;p&gt;Gradle 给我们的Android开发带来很大的便利，同事Gradle也是很灵活的，配置起来很’方便’，而且我们的开发工具AndroidStudio也是基于Gradle的，但是随着我们项目越来越大，依赖也越来越多，导致了编译起来非常慢。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;在网上搜索的时候我们能找到很多优化AndroidStudio Gradle编译的方法，例如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;配置 &lt;code&gt;gradle.properties&lt;/code&gt; 在文件中添加如下代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;org.gradle.daemon = true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;org.gradle.parallel = true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;org.gradle.configureondemand=true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;org.gradle.jvmargs=-Xms256m -Xmx1024m&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把 gradle 设置成离线模式  &lt;code&gt;offline work&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; 离线模式下 ，应该不能修改任何 build.gradle 文件。也就是说如果gradle 在Androidstudio中提示你要 &lt;strong&gt;&lt;code&gt;sync&lt;/code&gt;&lt;/strong&gt; 时，必须要联网。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;set up large vm heap size: 2G  （这个是别人说的我也不知道怎么设置）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Gradle-为什么慢？&quot;&gt;&lt;a href=&quot;#Gradle-为什么慢？&quot; class=&quot;headerlink&quot; title=&quot;Gradle 为什么慢？&quot;&gt;&lt;/a&gt;Gradle 为什么慢？&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;有些task运行起来就很慢&lt;/li&gt;
&lt;li&gt;设置了multiDexEnabled&lt;/li&gt;
&lt;li&gt;依赖库太多，下载慢&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;如何知道自己项目中是由那个原因引起的&quot;&gt;&lt;a href=&quot;#如何知道自己项目中是由那个原因引起的&quot; class=&quot;headerlink&quot; title=&quot;如何知道自己项目中是由那个原因引起的&quot;&gt;&lt;/a&gt;如何知道自己项目中是由那个原因引起的&lt;/h1&gt;&lt;p&gt;可以在gradle 运行的时候给每个task添加一个参数  &lt;code&gt;--profile&lt;/code&gt; ,用了监视task的运行，并打印log  最终log以html的方式打印在你的项目下的 &lt;code&gt;build/reports/profile/&lt;/code&gt; 中，根据不同时间命名的。&lt;/p&gt;
&lt;p&gt;可以配置到AndroidStudio中，或者直接在命令行运行的时候添加&lt;code&gt;./gradlew clean buildAll --profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其他优化办法就是就代码依赖库进行删减了，没什么技术含量，还有就是选择编译。&lt;/p&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xripg.com1.z0.glb.clouddn.com/2016/07/14/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-07-12%2017.15.54.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【参考文章】&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.liaohuqiu.net/posts/speed-up-your-build/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.liaohuqiu.net/posts/speed-up-your-build/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://kevinpelgrims.com/blog/2015/06/11/speeding-up-your-gradle-builds/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://kevinpelgrims.com/blog/2015/06/11/speeding-up-your-gradle-builds/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Gradle 给我们的Android开发带来很大的便利，同事Gradle也是很灵活的，配置起来很’方便’，而且我们的开发工具AndroidStudio也是基于Gradle的，但是随着我们项目越来越大，依赖也越来越多，导致了编译起来非常慢。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="AndroidStudio" scheme="http://febsky.me/categories/Android/AndroidStudio/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://febsky.me/tags/AndroidStudio/"/>
    
  </entry>
  
  <entry>
    <title>Hexo添加站内搜索</title>
    <link href="http://febsky.me/2016/07/11/2016-07-11-Hexo%E6%B7%BB%E5%8A%A0%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/"/>
    <id>http://febsky.me/2016/07/11/2016-07-11-Hexo添加站内搜索/</id>
    <published>2016-07-11T05:49:07.000Z</published>
    <updated>2016-07-14T07:49:45.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Google-和-百度提供的站内搜索&quot;&gt;&lt;a href=&quot;#Google-和-百度提供的站内搜索&quot; class=&quot;headerlink&quot; title=&quot;Google 和 百度提供的站内搜索&quot;&gt;&lt;/a&gt;Google 和 百度提供的站内搜索&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;可行性：&lt;/strong&gt;Google 呵呵，你懂。百度 据说github拒绝百度的爬虫，如果你的网站部署在github首页上，可能不能成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用法：&lt;/strong&gt; 在google的输入框中输入  &lt;code&gt;site:fesky.me&lt;/code&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Swiftype&quot;&gt;&lt;a href=&quot;#Swiftype&quot; class=&quot;headerlink&quot; title=&quot;Swiftype&quot;&gt;&lt;/a&gt;Swiftype&lt;/h1&gt;&lt;p&gt;这个据说是国外的一个很屌的做站内搜索的服务商，据说B轮融资。融了很多刀、&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;官方网址：&lt;/strong&gt; &lt;a href=&quot;https://swiftype.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swiftype&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可行性 ：&lt;/strong&gt; 据说官方给了30天的免费试用，试用期结束就降到普通版，我感觉我就是要搜个关键字也就几百篇文章完全没问题，可是我的过了试用期却不能用了，不知道为啥 时间为2016年7月。而且官网让我给他发邮局联系，你懂我的英语水平根本搞不明白他说了些啥。&lt;/p&gt;
&lt;h1 id=&quot;Algolia&quot;&gt;&lt;a href=&quot;#Algolia&quot; class=&quot;headerlink&quot; title=&quot;Algolia&quot;&gt;&lt;/a&gt;Algolia&lt;/h1&gt;&lt;p&gt;从 Algolia 管理界面和文档上来看不会比 Swiftype 差，可留作备选。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;官方网址&lt;/strong&gt; &lt;a href=&quot;https://www.algolia.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Algolia&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;序列化站点内容作为数据源，然后自己写查询方法。&quot;&gt;&lt;a href=&quot;#序列化站点内容作为数据源，然后自己写查询方法。&quot; class=&quot;headerlink&quot; title=&quot;序列化站点内容作为数据源，然后自己写查询方法。&quot;&gt;&lt;/a&gt;序列化站点内容作为数据源，然后自己写查询方法。&lt;/h1&gt;&lt;p&gt;好像有个Hexo的插件 &lt;a href=&quot;https://github.com/PaicHyperionDev/hexo-generator-search&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-generator-search&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者写的文档：&lt;/strong&gt; &lt;a href=&quot;http://hahack.com/codes/local-search-engine-for-hexo/#stq=&amp;amp;stp=0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地址&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;目前我用的这种方式，哈哈，我给这自己写了个通用版的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先安装这个插件,主要为了生成search.xml&lt;/p&gt;
&lt;p&gt; &lt;code&gt;$ npm install --save hexo-generator-search&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置hexo根目录的&lt;code&gt;_confing.yml&lt;/code&gt;文件，在文件最后添加,具体参数代表含义看文档。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;search:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  path: search.xml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  field: post&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在&lt;code&gt;source&lt;/code&gt;文件夹下面创建一个html文件我的如下,我主要为了偷懒不去修改theme中的模板了。也可以按照作者的方式&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;搜索页面&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://code.jquery.com/jquery-latest.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; searchFunc = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;path, search_id, content_id&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;            &#39;use strict&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            $.ajax(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                url: path,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                dataType: &lt;span class=&quot;string&quot;&gt;&quot;xml&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;xmlResponse&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// get the contents from search data&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; datas = $(&lt;span class=&quot;string&quot;&gt;&quot;entry&quot;&lt;/span&gt;, xmlResponse).map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            title: $(&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).text(),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            content: $(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).text(),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            url: $(&lt;span class=&quot;string&quot;&gt;&quot;url&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).text()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;).get();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $input = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(search_id);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $resultContent = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(content_id);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    $input.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;ul class=\&quot;search-result-list\&quot;&amp;gt;&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; keywords = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.value.trim().toLowerCase().split(&lt;span class=&quot;regexp&quot;&gt;/[\s\-]+/&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        $resultContent.innerHTML = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.value.trim().length &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// perform local searching&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        datas.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; isMatch = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; content_index = [];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data_title = data.title.trim().toLowerCase();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data_content = data.content.trim().replace(&lt;span class=&quot;regexp&quot;&gt;/&amp;lt;[^&amp;gt;]+&amp;gt;/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;).toLowerCase();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data_url = data.url;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; index_title = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; index_content = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; first_occur = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;// only match artiles with not empty titles and contents&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data_title != &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &amp;amp;&amp;amp; data_content != &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                keywords.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;keyword, i&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    index_title = data_title.indexOf(keyword);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    index_content = data_content.indexOf(keyword);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (index_title &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; index_content &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                        isMatch = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (index_content &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                            index_content = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                            first_occur = index_content;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;// show search results&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isMatch) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                str += &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;li&amp;gt;&amp;lt;a href=&#39;&quot;&lt;/span&gt; + data_url + &lt;span class=&quot;string&quot;&gt;&quot;&#39; class=&#39;search-result-title&#39;&amp;gt;&quot;&lt;/span&gt; + data_title + &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; content = data.content.trim().replace(&lt;span class=&quot;regexp&quot;&gt;/&amp;lt;[^&amp;gt;]+&amp;gt;/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (first_occur &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &lt;span class=&quot;comment&quot;&gt;// cut out 100 characters&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; start = first_occur - &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; end = first_occur + &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (start &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                        start = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (start == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                        end = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (end &amp;gt; content.length) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                        end = content.length;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; match_content = content.substr(start, end);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &lt;span class=&quot;comment&quot;&gt;// highlight all keywords&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    keywords.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;keyword&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; regS = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(keyword, &lt;span class=&quot;string&quot;&gt;&quot;gi&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                        match_content = match_content.replace(regS, &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;em class=\&quot;search-keyword\&quot;&amp;gt;&quot;&lt;/span&gt; + keyword + &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/em&amp;gt;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                    str += &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;p class=\&quot;search-result\&quot;&amp;gt;&quot;&lt;/span&gt; + match_content + &lt;span class=&quot;string&quot;&gt;&quot;...&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                str += &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/li&amp;gt;&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        str += &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/ul&amp;gt;&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        $resultContent.innerHTML = str;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;comment&quot;&gt;//注意这个地方要改成自己的博客地址&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        searchFunc(&lt;span class=&quot;string&quot;&gt;&quot;http://febsky.me/search.xml&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;local-search-input&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;local-search-result&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;site_search&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;local-search-input&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;q&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;results&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;placeholder&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;search my blog...&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;form-control&quot;&lt;/span&gt;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;local-search-result&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后一步很重要，因为我们用了偷懒的方式，所以必须弥补&lt;/p&gt;
&lt;p&gt;在根目录的&lt;code&gt;_config.yml&lt;/code&gt; 中修改 skip_render 配置，意思是说不让模板来渲染，我们自己为这个html指定css样式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;skip_render:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    - search.html&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样运行 &lt;code&gt;hexo d -g&lt;/code&gt; 之后，就可以用我们自己的域名加&lt;code&gt;/search.html&lt;/code&gt;的方式打开搜索界面了。例如我的是&lt;code&gt;http://febsky.me/search.html&lt;/code&gt; 很丑是吧，自己写css吧，还好我以前做web。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 至此就完成了本地检索引擎的实现，最后的工作就是修改样式，让检索页面更美观。在 searchFunc 函数中，作者已经为几个关键的页面元素设定了 css 名：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ul.search-result-list - 搜索结果列表的样式名；&lt;br&gt;a.search-result-title - 搜索结果文章标题的样式名；&lt;br&gt;p.search-result - 搜索结果每篇文章的预览段落的样式名；&lt;br&gt;em.search-keyword - 搜索结果每篇文章的预览段落中匹配关键词的样式名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;最后还有一个叫-lunrjs的东西&quot;&gt;&lt;a href=&quot;#最后还有一个叫-lunrjs的东西&quot; class=&quot;headerlink&quot; title=&quot;最后还有一个叫 lunrjs的东西&quot;&gt;&lt;/a&gt;最后还有一个叫 lunrjs的东西&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;官网：&lt;/strong&gt;&lt;a href=&quot;http://lunrjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://lunrjs.com/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Google-和-百度提供的站内搜索&quot;&gt;&lt;a href=&quot;#Google-和-百度提供的站内搜索&quot; class=&quot;headerlink&quot; title=&quot;Google 和 百度提供的站内搜索&quot;&gt;&lt;/a&gt;Google 和 百度提供的站内搜索&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;可行性：&lt;/strong&gt;Google 呵呵，你懂。百度 据说github拒绝百度的爬虫，如果你的网站部署在github首页上，可能不能成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用法：&lt;/strong&gt; 在google的输入框中输入  &lt;code&gt;site:fesky.me&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://febsky.me/categories/Hexo/"/>
    
      <category term="搜索" scheme="http://febsky.me/categories/Hexo/%E6%90%9C%E7%B4%A2/"/>
    
    
      <category term="Hexo" scheme="http://febsky.me/tags/Hexo/"/>
    
      <category term="站内搜索" scheme="http://febsky.me/tags/%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>Android开发我用到的Chrome插件</title>
    <link href="http://febsky.me/2016/07/05/2016-07-05-Android%E5%BC%80%E5%8F%91%E6%88%91%E7%94%A8%E5%88%B0%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/"/>
    <id>http://febsky.me/2016/07/05/2016-07-05-Android开发我用到的Chrome插件/</id>
    <published>2016-07-05T05:35:51.000Z</published>
    <updated>2016-07-06T03:24:21.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Chrome调试WebView&quot;&gt;&lt;a href=&quot;#Chrome调试WebView&quot; class=&quot;headerlink&quot; title=&quot;Chrome调试WebView&quot;&gt;&lt;/a&gt;Chrome调试WebView&lt;/h1&gt;&lt;p&gt;&lt;code&gt;前提一定要开启手机USB调试模式&lt;/code&gt;如果千万不要丢了U&lt;/p&gt;
&lt;p&gt;在电脑上打开Chrome浏览器的菜单– 更多工具 – 检查设备（Chromemenu &amp;gt; More tools &amp;gt; Inspect Devices），或者直接在浏览器地址栏输入chrome://inspect 或者about:inspect&lt;/p&gt;
&lt;p&gt;然后自己瞎鼓捣就行了。&lt;/p&gt;
&lt;h1 id=&quot;Chrome（电脑端）操作Android真机（解放双手）&quot;&gt;&lt;a href=&quot;#Chrome（电脑端）操作Android真机（解放双手）&quot; class=&quot;headerlink&quot; title=&quot;Chrome（电脑端）操作Android真机（解放双手）&quot;&gt;&lt;/a&gt;Chrome（电脑端）操作Android真机（解放双手）&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Chrome有个叫做 &lt;code&gt;Vysor&lt;/code&gt; 的插件，可以直接在Chrome应用市场搜索。&lt;br&gt;可惜的是这个的免费版，画面太不清晰。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其实还有一个不是Chrome插件的东西，是Google开发的亲儿子，（简称ASM）是一款监视手机或者模拟器屏幕的工具，主要和上面相比分辨率高   &lt;a href=&quot;https://code.google.com/archive/p/android-screen-monitor/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android-screen-monitor&lt;/a&gt;  这个托管在GoogleCode上面，要科学上网！ 这个和上面的相比仅仅有监视的功能不能操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;配置方式：解压后将 &lt;code&gt;asm.jar&lt;/code&gt;拷贝到本机 &lt;code&gt;android-sdk\platform-tools&lt;/code&gt;目录下。然后命令行运行 &lt;code&gt;java -jar asm.jar&lt;/code&gt; 如果不copy到 platform-tools目录下，可能要配置Android sdk的环境变量。切记。&lt;/p&gt;
&lt;h1 id=&quot;Facebook出了一个叫做Stetho东西&quot;&gt;&lt;a href=&quot;#Facebook出了一个叫做Stetho东西&quot; class=&quot;headerlink&quot; title=&quot;Facebook出了一个叫做Stetho东西&quot;&gt;&lt;/a&gt;Facebook出了一个叫做&lt;a href=&quot;http://facebook.github.io/stetho/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stetho&lt;/a&gt;东西&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt; 他能在Chrome控制台中查看app的网络请求，数据抓包，和app的数据库文件等等。但是要在app中引入库，具体的操作看官网吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Chrome调试WebView&quot;&gt;&lt;a href=&quot;#Chrome调试WebView&quot; class=&quot;headerlink&quot; title=&quot;Chrome调试WebView&quot;&gt;&lt;/a&gt;Chrome调试WebView&lt;/h1&gt;&lt;p&gt;&lt;code&gt;前提一定要开启手机USB
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="Chrome插件" scheme="http://febsky.me/categories/Android/Chrome%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="Chrome插件" scheme="http://febsky.me/tags/Chrome%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Android逆向工程用到的工具</title>
    <link href="http://febsky.me/2016/07/05/2016-07-05-Android%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E7%94%A8%E5%88%B0%E7%9A%84%E5%B7%A5%E5%85%B7/"/>
    <id>http://febsky.me/2016/07/05/2016-07-05-Android逆向工程用到的工具/</id>
    <published>2016-07-05T05:12:00.000Z</published>
    <updated>2016-07-22T09:45:14.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;第一套组合&quot;&gt;&lt;a href=&quot;#第一套组合&quot; class=&quot;headerlink&quot; title=&quot;第一套组合&quot;&gt;&lt;/a&gt;第一套组合&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/iBotPeaches/Apktool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apktool&lt;/a&gt; + &lt;a href=&quot;https://github.com/pxb1988/dex2jar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dex2jar&lt;/a&gt; + &lt;a href=&quot;https://github.com/java-decompiler/jd-gui&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jd-gui&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可惜的是apktool好像后来不再支持调试Smali文件，jd-gui 作者从 2015 年开始就停止了维护.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但是AndroidStudio有个调试Smali的插件  &lt;a href=&quot;SmaliIdea：https://github.com/JesusFreke/smali/wiki/smalidea&quot;&gt;地址 https://github.com/JesusFreke/smali/wiki/smalidea&lt;/a&gt;&lt;br&gt;据说jadx 不错（推荐使用），可以取代 jd-gui &lt;a href=&quot;https://github.com/skylot/jadx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地址 https://github.com/skylot/jadx&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Google-出的几个逆向分析工具&quot;&gt;&lt;a href=&quot;#Google-出的几个逆向分析工具&quot; class=&quot;headerlink&quot; title=&quot;Google 出的几个逆向分析工具&quot;&gt;&lt;/a&gt;Google 出的几个逆向分析工具&lt;/h1&gt;&lt;h2 id=&quot;1-enjarify&quot;&gt;&lt;a href=&quot;#1-enjarify&quot; class=&quot;headerlink&quot; title=&quot;1. enjarify  &quot;&gt;&lt;/a&gt;1. enjarify  &lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/google/enjarify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/google/enjarify&lt;/a&gt;&lt;br&gt;功能：可直接将 apk 文件还原成为 jar 文件，也可以和 dex2jar 一样，直接操作某个dex&lt;/p&gt;
&lt;p&gt;这是 Google 出品的一个逆向分析工具，从反编译成 jar 包的流程来说，要比 dex2jar 方便得多。下载完工具到本地并配置好 Python 环境后，需要修改 enjarify 目录下的 enjarify.bat 文件，将 python3 改为 python&lt;/p&gt;
&lt;h2 id=&quot;2-Procyon-和-cfr-和-Jad&quot;&gt;&lt;a href=&quot;#2-Procyon-和-cfr-和-Jad&quot; class=&quot;headerlink&quot; title=&quot;2. Procyon 和 cfr 和 Jad &quot;&gt;&lt;/a&gt;2. Procyon 和 cfr 和 Jad &lt;/h2&gt;&lt;p&gt;当然这几个不是Google的产物，这几个是&lt;code&gt;jar&lt;/code&gt; 和&lt;code&gt;.class&lt;/code&gt; 反编译工具。为啥要用这些，因为jd-gui，反编译java7会有问题。有些语法有点让人难以读懂。但是他有图形化界面剩下的这几个都没有。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://bitbucket.org/mstrobel/procyon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bitbucket.org/mstrobel/procyon&lt;/a&gt;&lt;br&gt;功能：将反编译得到 jar 包还原成 java 文件，同时能够更强的还原代码的逻辑结构  2016-07-12 持续更新中。。。据说有个图形化界面&lt;a href=&quot;https://github.com/deathmarine/Luyten&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/deathmarine/Luyten&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.benf.org/other/cfr/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.benf.org/other/cfr/&lt;/a&gt; 最新版 cfr_0_116.jar (July 2016) 持续更新中。。。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/JAD_(JAva_Decompiler&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jad&lt;/a&gt;)  //这货我没用过，不知道地址，好像也不怎么更新了，给的是wiki的地址。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;procyon 反编译jar包命令：(我用的是这个，比jd-gui好很多真的)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ java -jar procyon-decompiler-0.5.30.jar -jar myJar.jar -o out&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;cfr 反编译jar包命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;java -jar cfr_0_79.jar example.jar -–outputdir out  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;3-ClassyShark&quot;&gt;&lt;a href=&quot;#3-ClassyShark&quot; class=&quot;headerlink&quot; title=&quot;3. ClassyShark&quot;&gt;&lt;/a&gt;3. ClassyShark&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/google/android-classyshark&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/google/android-classyshark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;功能：可直接浏览 Apk，支持对.dex, .aar, .so，.apk, .jar, .class等文件的操作。&lt;/p&gt;
&lt;p&gt;同意Google出品&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;java -jar ClassyShark.jar -open XXX.apk&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;4-bytecode-viewer-这是个套装&quot;&gt;&lt;a href=&quot;#4-bytecode-viewer-这是个套装&quot; class=&quot;headerlink&quot; title=&quot;4.bytecode-viewer 这是个套装&quot;&gt;&lt;/a&gt;4.bytecode-viewer 这是个套装&lt;/h2&gt;&lt;p&gt;最后说一个基于Procyon的项目 &lt;a href=&quot;https://github.com/Konloch/bytecode-viewer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bytecode-viewer&lt;/a&gt;&lt;br&gt;A Java 8 Jar &amp;amp; Android APK Reverse Engineering Suite (Decompiler, Editor, Debugger &amp;amp; More) &lt;a href=&quot;https://bytecodeviewer.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bytecodeviewer.com&lt;/a&gt;.  不知道如何没用过。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Jadx&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;强烈推荐这个玩意，反编译后的代码可读性好，自带图形化界面。&lt;/p&gt;
&lt;p&gt;这个是一款GUI界面的反编译工具，是一款点击鼠标就可以使用的跨平台工具。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/skylot/jadx/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;项目在这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.febsky.me&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://bbs.pediy.com/showthread.php?p=1397272&amp;amp;mode=threaded&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://bbs.pediy.com/showthread.php?p=1397272&amp;amp;mode=threaded&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一套组合&quot;&gt;&lt;a href=&quot;#第一套组合&quot; class=&quot;headerlink&quot; title=&quot;第一套组合&quot;&gt;&lt;/a&gt;第一套组合&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/iBotPeaches/Apktool&quot; target=&quot;_
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="反编译" scheme="http://febsky.me/categories/Android/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
      <category term="逆向工程" scheme="http://febsky.me/categories/Android/%E5%8F%8D%E7%BC%96%E8%AF%91/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="反编译" scheme="http://febsky.me/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
      <category term="逆向工程" scheme="http://febsky.me/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python使用虚拟环境</title>
    <link href="http://febsky.me/2016/06/17/2016-06-17-Python%E4%BD%BF%E7%94%A8%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    <id>http://febsky.me/2016/06/17/2016-06-17-Python使用虚拟环境/</id>
    <published>2016-06-17T09:46:24.000Z</published>
    <updated>2016-07-07T06:12:28.000Z</updated>
    
    <content type="html">&lt;p&gt;Python的虚拟环境可以使一个Python程序拥有独立的库library和解释器interpreter，而不用与其他Python程序共享统一个library和interpreter。虚拟环境的好处是避免了不同Python程序间的互相影响（共同使用global library 和 interpreter），例如程序A需要某个库的1.0版本，而程序B需要同样这个库的2.0版本，如果程序B执行则A就不能执行了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装virtualenv：&lt;br&gt;&lt;code&gt;pip install virtualenv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建虚拟环境&lt;/p&gt;
&lt;p&gt;&lt;code&gt;virtualenv venv&lt;/code&gt;&lt;br&gt; venv是新创建的虚拟环境的名称。 同时会创建一个与虚拟环境名称相同的文件夹venv, 里面存储了一个独立的Python执行环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进入虚拟环境&lt;/p&gt;
&lt;p&gt; &lt;code&gt;source venv/bin/activate&lt;/code&gt;&lt;br&gt; 进入虚拟环境后，命令行的提示符会加入虚拟环境的名称，例如：(venv)user@machine:~$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;退出虚拟环境&lt;br&gt; &lt;code&gt;deactivate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除虚拟环境&lt;br&gt; &lt;code&gt;rm -r venv&lt;/code&gt;&lt;br&gt; 直接删除虚拟环境所在的文件夹venv就删除了我们创建的venv虚拟环境。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Python的虚拟环境可以使一个Python程序拥有独立的库library和解释器interpreter，而不用与其他Python程序共享统一个library和interpreter。虚拟环境的好处是避免了不同Python程序间的互相影响（共同使用global librar
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python常用的库</title>
    <link href="http://febsky.me/2016/06/17/2016-06-17-Python%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BA%93/"/>
    <id>http://febsky.me/2016/06/17/2016-06-17-Python常用的库/</id>
    <published>2016-06-16T17:55:08.000Z</published>
    <updated>2016-06-17T16:09:13.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;网络请求库 requests &lt;a href=&quot;http://cn.python-requests.org/zh_CN/latest/user/quickstart.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一份中文文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HTML解析  pyquery 或者 beautifulsoup&lt;/li&gt;
&lt;li&gt;orm库 sqlalchemy &lt;a href=&quot;http://gashero.yeax.com/?p=6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一份中文文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;种子解析libtorrent&lt;/li&gt;
&lt;li&gt;web Flask,flask-httpauth&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;【参考】&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/vovlie/p/4182814.html?utm_source=tuicool&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用Flask设计带认证的Restfull&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;网络请求库 requests &lt;a href=&quot;http://cn.python-requests.org/zh_CN/latest/user/quickstart.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一份中文文档&lt;/a&gt;&lt;
    
    </summary>
    
      <category term="Python" scheme="http://febsky.me/categories/Python/"/>
    
    
      <category term="Python" scheme="http://febsky.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python日期时间的处理</title>
    <link href="http://febsky.me/2016/06/14/2016-06-14-Python%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E7%9A%84%E5%A4%84%E7%90%86/"/>
    <id>http://febsky.me/2016/06/14/2016-06-14-Python日期时间的处理/</id>
    <published>2016-06-14T14:04:19.000Z</published>
    <updated>2016-07-14T07:51:13.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;首先导入时间日期模块&quot;&gt;&lt;a href=&quot;#首先导入时间日期模块&quot; class=&quot;headerlink&quot; title=&quot;首先导入时间日期模块&quot;&gt;&lt;/a&gt;首先导入时间日期模块&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; datetime&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;string转datetime&quot;&gt;&lt;a href=&quot;#string转datetime&quot; class=&quot;headerlink&quot; title=&quot;string转datetime&quot;&gt;&lt;/a&gt;string转datetime&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;str = &lt;span class=&quot;string&quot;&gt;&#39;2012-11-19&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;date_time = datetime.datetime.strptime(str,&lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;datetime转string&quot;&gt;&lt;a href=&quot;#datetime转string&quot; class=&quot;headerlink&quot; title=&quot;datetime转string&quot;&gt;&lt;/a&gt;datetime转string&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;date_time = datetime.datetime(&lt;span class=&quot;number&quot;&gt;2012&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;date_time.strftime(&lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;datetime-获取date&quot;&gt;&lt;a href=&quot;#datetime-获取date&quot; class=&quot;headerlink&quot; title=&quot;datetime 获取date&quot;&gt;&lt;/a&gt;datetime 获取date&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;date_time.date()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;datetime转时间戳&quot;&gt;&lt;a href=&quot;#datetime转时间戳&quot; class=&quot;headerlink&quot; title=&quot;datetime转时间戳&quot;&gt;&lt;/a&gt;datetime转时间戳&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;time_time = time.mktime(date_time.timetuple())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; time_time&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;时间戳转string&quot;&gt;&lt;a href=&quot;#时间戳转string&quot; class=&quot;headerlink&quot; title=&quot;时间戳转string&quot;&gt;&lt;/a&gt;时间戳转string&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;time.strftime(&lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d&#39;&lt;/span&gt;,time.localtime(time_time))&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;time（时间戳）与datetime之间的互相转换&quot;&gt;&lt;a href=&quot;#time（时间戳）与datetime之间的互相转换&quot; class=&quot;headerlink&quot; title=&quot;time（时间戳）与datetime之间的互相转换&quot;&gt;&lt;/a&gt;time（时间戳）与datetime之间的互相转换&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#注释 time.time() 返回的是毫秒值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;datetime.datetime.fromtimestamp(time.time())&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;date转datetime&quot;&gt;&lt;a href=&quot;#date转datetime&quot; class=&quot;headerlink&quot; title=&quot;date转datetime&quot;&gt;&lt;/a&gt;date转datetime&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;date = datetime.date.today()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; date    &lt;span class=&quot;comment&quot;&gt;##datetime.date(2012,11,19)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;datetime.datetime.strptime(str(date),&lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#将date转换为str，在由str转换为datetime&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;datetime.datetime(&lt;span class=&quot;number&quot;&gt;2012&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;##time模块&lt;/p&gt;
&lt;p&gt;time模块提供各种操作时间的函数，一般有两种表示时间的方式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一种是时间戳的方式(相对于1970.1.1 00:00:00以秒计算的偏移量),时间戳是惟一的&lt;/li&gt;
&lt;li&gt;第二种以数组的形式表示即(struct_time),共有九个元素，分别表示，同一个时间戳的struct_time会因为时区不同而不同&lt;/li&gt;
&lt;li&gt;gmtime()与mktime（）可以将两种时间表示方法自由转换&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【参考文献】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://iam42.iteye.com/blog/1922875&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;time 和 datetime之间的关系&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;首先导入时间日期模块&quot;&gt;&lt;a href=&quot;#首先导入时间日期模块&quot; class=&quot;headerlink&quot; title=&quot;首先导入时间日期模块&quot;&gt;&lt;/a&gt;首先导入时间日期模块&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; datetime&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;string转datetime&quot;&gt;&lt;a href=&quot;#string转datetime&quot; class=&quot;headerlink&quot; title=&quot;string转datetime&quot;&gt;&lt;/a&gt;string转datetime&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;str = &lt;span class=&quot;string&quot;&gt;&#39;2012-11-19&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;date_time = datetime.datetime.strptime(str,&lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d&#39;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="http://febsky.me/categories/Python/"/>
    
    
      <category term="Python" scheme="http://febsky.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Android开发中图文并排插件</title>
    <link href="http://febsky.me/2016/06/13/2016-06-13-Android%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%9B%BE%E6%96%87%E5%B9%B6%E6%8E%92%E6%8F%92%E4%BB%B6/"/>
    <id>http://febsky.me/2016/06/13/2016-06-13-Android开发中的图文并排插件/</id>
    <published>2016-06-13T09:33:37.000Z</published>
    <updated>2016-06-13T02:19:11.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sufficientlysecure/html-textview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;html-textview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zzhoujay/RichText&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RichText&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sufficientlysecure/html-textview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;html-textview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;ht
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
  </entry>
  
</feed>
