<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的程序世界</title>
  <subtitle>今年我23岁了</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://febsky.me/"/>
  <updated>2016-07-14T10:55:04.000Z</updated>
  <id>http://febsky.me/</id>
  
  <author>
    <name>Qiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MPAndroidChart画线形图</title>
    <link href="http://febsky.me/2016/07/14/2016-07-14-MPAndroidChart%E7%94%BB%E7%BA%BF%E5%BD%A2%E5%9B%BE/"/>
    <id>http://febsky.me/2016/07/14/2016-07-14-MPAndroidChart画线形图/</id>
    <published>2016-07-14T07:34:30.000Z</published>
    <updated>2016-07-14T10:55:04.000Z</updated>
    
    <content type="html">&lt;p&gt;最近要做一个折线图，就搜到了 &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MPAndroidChart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;效果图如下&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xripg.com1.z0.glb.clouddn.com/2016/07/14/device-2016-07-14-153535.png&quot; alt=&quot;MPAndroidChart绘制后的效果图&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;gradle 引入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;compile &amp;#39;com.github.PhilJay:MPAndroidChart:v3.0.0-beta&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以下是Activity的代码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;布局文件很简单就包含一个&lt;code&gt;com.github.mikephil.charting.charts.LineChart&lt;/code&gt;标签，不再给出：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; febsky.me.testmpchart;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.graphics.Color;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.os.Bundle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.support.v7.app.AppCompatActivity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.util.Log;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.charts.LineChart;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.components.AxisBase;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.components.Legend;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.components.XAxis;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.components.YAxis;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.data.Entry;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.data.LineData;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.data.LineDataSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.formatter.AxisValueFormatter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.highlight.Highlight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.github.mikephil.charting.listener.OnChartValueSelectedListener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MultiLineActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppCompatActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;OnChartValueSelectedListener&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; LineChart mChart;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] mColors = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[]&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Color.rgb(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;),    &lt;span class=&quot;comment&quot;&gt;//红色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Color.rgb(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;196&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;244&lt;/span&gt;),    &lt;span class=&quot;comment&quot;&gt;//淡蓝色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Color.rgb(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;243&lt;/span&gt;)    &lt;span class=&quot;comment&quot;&gt;//深蓝&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; String[] mMonths = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String[]&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;1月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;2月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;3月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;4月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;5月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;6月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;7月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;8月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;9月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;10月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;11月&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;12月&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.activity_mulit_line);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChart = (LineChart) findViewById(R.id.chart);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChart.setOnChartValueSelectedListener(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        initChartView();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/**-------------这里的数据不重要，主要用随机数的方式生成点坐标-------------**/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//设置模拟数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ArrayList&amp;lt;Entry&amp;gt; yVals = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Entry&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            yVals.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Entry(i, (&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;) (Math.random() * &lt;span class=&quot;number&quot;&gt;10000f&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ArrayList&amp;lt;Entry&amp;gt; yVals2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Entry&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            yVals2.add(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Entry(i, (&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;) (Math.random() * &lt;span class=&quot;number&quot;&gt;10000f&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addDataSet(yVals, &lt;span class=&quot;string&quot;&gt;&quot;一居&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addDataSet(yVals2, &lt;span class=&quot;string&quot;&gt;&quot;两居&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/**--------------------------**/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//图标的下边的指示块  图例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Legend l = mChart.getLegend();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        l.setForm(Legend.LegendForm.LINE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        l.setXEntrySpace(&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initChartView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChart.setDrawGridBackground(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChart.setDescription(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//右下角说明文字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChart.setDrawBorders(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//四周是不是有边框&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//        mChart.setBorderColor();    //边框颜色，默认黑色？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//控制轴上的坐标绘制在什么地方 上边下边左边右边&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        XAxis xAxis = mChart.getXAxis();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xAxis.setPosition(XAxis.XAxisPosition.BOTTOM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xAxis.enableGridDashedLine(&lt;span class=&quot;number&quot;&gt;10f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0f&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//给整成虚线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xAxis.setAxisMinValue(&lt;span class=&quot;number&quot;&gt;0f&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//设置轴的最小值。这样设置将不会根据提供的数据自动计算。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xAxis.setGranularity(&lt;span class=&quot;number&quot;&gt;1f&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//缩放的时候有用，比如放大的时候，我不想把横轴的月份再细分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xAxis.setValueFormatter(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AxisValueFormatter() &amp;#123;    &lt;span class=&quot;comment&quot;&gt;//绘制横轴显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getFormattedValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; value, AxisBase axis)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mMonths[(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) value % mMonths.length];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getDecimalDigits&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xAxis.setDrawLabels(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//是不是显示轴上的刻度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChart.getAxisRight().setEnabled(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        YAxis leftAxis = mChart.getAxisLeft();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftAxis.setEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        leftAxis.enableGridDashedLine(&lt;span class=&quot;number&quot;&gt;10f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10f&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// enable touch gestures&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChart.setTouchEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// if disabled, scaling can be done on x- and y-axis separately&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChart.setPinchZoom(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// enable scaling and dragging&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChart.setDragEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChart.setScaleEnabled(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//一个chart中包含一个Data对象，一个Data对象包含多个DataSet对象，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 每个DataSet是对应一条线上的所有点(相对于折线图来说)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChart.setData(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LineData());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addDataSet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ArrayList&amp;lt;Entry&amp;gt; entryList, String dataSetName)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LineData data = mChart.getData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = data.getDataSetCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            LineDataSet set = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LineDataSet(entryList, dataSetName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            set.setLineWidth(&lt;span class=&quot;number&quot;&gt;1.5f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            set.setCircleRadius(&lt;span class=&quot;number&quot;&gt;3.5f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; color = mColors[count % mColors.length];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            set.setColor(color);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            set.setCircleColor(color);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            set.setValueTextSize(&lt;span class=&quot;number&quot;&gt;10f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            set.setDrawValues(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//节点不显示具体数值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            set.setValueTextColor(color);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            set.setDrawHorizontalHighlightIndicator(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//取消横向辅助线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            set.setDrawVerticalHighlightIndicator(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);    &lt;span class=&quot;comment&quot;&gt;//取消纵向辅助线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            data.addDataSet(set);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            data.notifyDataChanged();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mChart.notifyDataSetChanged();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mChart.invalidate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onValueSelected&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Entry e, Highlight h)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.i(&lt;span class=&quot;string&quot;&gt;&quot;Q_M:&quot;&lt;/span&gt;, e.toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onNothingSelected&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;最近要做一个折线图，就搜到了 &lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MPAndroidChart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;效果图如下
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="MPAndroidChart" scheme="http://febsky.me/categories/Android/MPAndroidChart/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="MPAndroidChart" scheme="http://febsky.me/tags/MPAndroidChart/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio中查看依赖库的本地存储路径</title>
    <link href="http://febsky.me/2016/07/13/2016-07-13-AndroidStudio%E4%B8%AD%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E4%B8%80%E4%B8%AAtask%E6%98%BE%E7%A4%BA%E5%87%BA%E4%BE%9D%E8%B5%96%E5%BA%93%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8%E8%B7%AF%E5%BE%84/"/>
    <id>http://febsky.me/2016/07/13/2016-07-13-AndroidStudio中如何利用一个task显示出依赖库的本地存储路径/</id>
    <published>2016-07-13T02:39:17.000Z</published>
    <updated>2016-07-14T07:47:34.000Z</updated>
    
    <content type="html">&lt;p&gt;这两天由于公司网速慢，每次要下载v4  和 v7 包非常耗时。把gradle 改成离线模式就好多了。据说离线模式不再重新下载依赖。但是很好奇，AndroidStudio的gradle 引入的第三方库到底缓存到本地的什么位置了。&lt;/p&gt;
&lt;p&gt;可以在app目录下的&lt;code&gt;build.gradle&lt;/code&gt;的文件的最后添加：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#10;task showMeCache &amp;#60;&amp;#60; &amp;#123;&amp;#10;    configurations.compile.each &amp;#123; println it &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后，在命令行切换到你的项目根目录下运行：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./gradlew showMeCache&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这时候控制台就好打印出依赖库的缓存位置(下面是我显示的环信一个demo的所有的依赖库，包括lib引入，和在gradle的maven库引入的。)：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;liuqiangs-MacBook-Pro:TestHx liuqiang$ ./gradlew showMeCache&amp;#10;Incremental java compilation is an incubating feature.&amp;#10;:app:showMeCache&amp;#10;/Users/liuqiang/Workspace/meiliwu/TestHx/app/libs/hyphenatechat_3.1.3.jar&amp;#10;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/appcompat-v7/23.4.0/appcompat-v7-23.4.0.aar&amp;#10;/Users/liuqiang/.gradle/caches/modules-2/files-2.1/com.jakewharton/butterknife/7.0.1/d5d13ea991eab0252e3710e5df3d6a9d4b21d461/butterknife-7.0.1.jar&amp;#10;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/design/23.4.0/design-23.4.0.aar&amp;#10;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/animated-vector-drawable/23.4.0/animated-vector-drawable-23.4.0.aar&amp;#10;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/support-v4/23.4.0/support-v4-23.4.0.aar&amp;#10;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/support-vector-drawable/23.4.0/support-vector-drawable-23.4.0.aar&amp;#10;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/recyclerview-v7/23.4.0/recyclerview-v7-23.4.0.aar&amp;#10;/Users/liuqiang/Development/android-sdk-macosx/extras/android/m2repository/com/android/support/support-annotations/23.4.0/support-annotations-23.4.0.jar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到，v4 和 v7的支持包，是下载下来放到你本地Android sdk的extras 目录下的，所以，我猜测，可以直接从别人电脑拷贝这个文件夹的内容，然后使用gradle的离线模式编译。这样就不会再网速差的情况下去下载 v4 和 v7  。这种想法仅仅是用于 v4和v7 其他的第三方依赖库可以看到是放到 ~/.gradle/cache 目录下的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【参考文献】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/asd6340370/article/details/51829847&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在AndroidStudio中如何利用一个task显示出依赖库的本地存储路径
&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这两天由于公司网速慢，每次要下载v4  和 v7 包非常耗时。把gradle 改成离线模式就好多了。据说离线模式不再重新下载依赖。但是很好奇，AndroidStudio的gradle 引入的第三方库到底缓存到本地的什么位置了。&lt;/p&gt;
&lt;p&gt;可以在app目录下的&lt;code&gt;
    
    </summary>
    
      <category term="AndroidStudio" scheme="http://febsky.me/categories/AndroidStudio/"/>
    
      <category term="Android" scheme="http://febsky.me/categories/AndroidStudio/Android/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://febsky.me/tags/AndroidStudio/"/>
    
  </entry>
  
  <entry>
    <title>AndroidStudio加快编译的方法</title>
    <link href="http://febsky.me/2016/07/12/2016-07-12-AndroidStudio%E5%8A%A0%E5%BF%AB%E7%BC%96%E8%AF%91%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://febsky.me/2016/07/12/2016-07-12-AndroidStudio加快编译的方法/</id>
    <published>2016-07-12T08:57:32.000Z</published>
    <updated>2016-07-15T11:06:16.000Z</updated>
    
    <content type="html">&lt;p&gt;Gradle 给我们的Android开发带来很大的便利，同事Gradle也是很灵活的，配置起来很’方便’，而且我们的开发工具AndroidStudio也是基于Gradle的，但是随着我们项目越来越大，依赖也越来越多，导致了编译起来非常慢。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;在网上搜索的时候我们能找到很多优化AndroidStudio Gradle编译的方法，例如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;配置 &lt;code&gt;gradle.properties&lt;/code&gt; 在文件中添加如下代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;org.gradle.daemon = true&amp;#10;org.gradle.parallel = true&amp;#10;org.gradle.configureondemand=true&amp;#10;org.gradle.jvmargs=-Xms256m -Xmx1024m&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把 gradle 设置成离线模式  &lt;code&gt;offline work&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; 离线模式下 ，应该不能修改任何 build.gradle 文件。也就是说如果gradle 在Androidstudio中提示你要 &lt;strong&gt;&lt;code&gt;sync&lt;/code&gt;&lt;/strong&gt; 时，必须要联网。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;set up large vm heap size: 2G  （这个是别人说的我也不知道怎么设置）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&quot;Gradle-为什么慢？&quot;&gt;&lt;a href=&quot;#Gradle-为什么慢？&quot; class=&quot;headerlink&quot; title=&quot;Gradle 为什么慢？&quot;&gt;&lt;/a&gt;Gradle 为什么慢？&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;有些task运行起来就很慢&lt;/li&gt;
&lt;li&gt;设置了multiDexEnabled&lt;/li&gt;
&lt;li&gt;依赖库太多，下载慢&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;如何知道自己项目中是由那个原因引起的&quot;&gt;&lt;a href=&quot;#如何知道自己项目中是由那个原因引起的&quot; class=&quot;headerlink&quot; title=&quot;如何知道自己项目中是由那个原因引起的&quot;&gt;&lt;/a&gt;如何知道自己项目中是由那个原因引起的&lt;/h1&gt;&lt;p&gt;可以在gradle 运行的时候给每个task添加一个参数  &lt;code&gt;--profile&lt;/code&gt; ,用了监视task的运行，并打印log  最终log以html的方式打印在你的项目下的 &lt;code&gt;build/reports/profile/&lt;/code&gt; 中，根据不同时间命名的。&lt;/p&gt;
&lt;p&gt;可以配置到AndroidStudio中，或者直接在命令行运行的时候添加&lt;code&gt;./gradlew clean buildAll --profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其他优化办法就是就代码依赖库进行删减了，没什么技术含量，还有就是选择编译。&lt;/p&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xripg.com1.z0.glb.clouddn.com/2016/07/14/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-07-12%2017.15.54.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【参考文章】&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.liaohuqiu.net/posts/speed-up-your-build/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.liaohuqiu.net/posts/speed-up-your-build/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://kevinpelgrims.com/blog/2015/06/11/speeding-up-your-gradle-builds/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://kevinpelgrims.com/blog/2015/06/11/speeding-up-your-gradle-builds/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Gradle 给我们的Android开发带来很大的便利，同事Gradle也是很灵活的，配置起来很’方便’，而且我们的开发工具AndroidStudio也是基于Gradle的，但是随着我们项目越来越大，依赖也越来越多，导致了编译起来非常慢。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="AndroidStudio" scheme="http://febsky.me/categories/Android/AndroidStudio/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="AndroidStudio" scheme="http://febsky.me/tags/AndroidStudio/"/>
    
  </entry>
  
  <entry>
    <title>Hexo添加站内搜索</title>
    <link href="http://febsky.me/2016/07/11/2016-07-11-Hexo%E6%B7%BB%E5%8A%A0%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/"/>
    <id>http://febsky.me/2016/07/11/2016-07-11-Hexo添加站内搜索/</id>
    <published>2016-07-11T05:49:07.000Z</published>
    <updated>2016-07-14T07:49:45.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Google-和-百度提供的站内搜索&quot;&gt;&lt;a href=&quot;#Google-和-百度提供的站内搜索&quot; class=&quot;headerlink&quot; title=&quot;Google 和 百度提供的站内搜索&quot;&gt;&lt;/a&gt;Google 和 百度提供的站内搜索&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;可行性：&lt;/strong&gt;Google 呵呵，你懂。百度 据说github拒绝百度的爬虫，如果你的网站部署在github首页上，可能不能成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用法：&lt;/strong&gt; 在google的输入框中输入  &lt;code&gt;site:fesky.me&lt;/code&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;Swiftype&quot;&gt;&lt;a href=&quot;#Swiftype&quot; class=&quot;headerlink&quot; title=&quot;Swiftype&quot;&gt;&lt;/a&gt;Swiftype&lt;/h1&gt;&lt;p&gt;这个据说是国外的一个很屌的做站内搜索的服务商，据说B轮融资。融了很多刀、&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;官方网址：&lt;/strong&gt; &lt;a href=&quot;https://swiftype.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swiftype&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可行性 ：&lt;/strong&gt; 据说官方给了30天的免费试用，试用期结束就降到普通版，我感觉我就是要搜个关键字也就几百篇文章完全没问题，可是我的过了试用期却不能用了，不知道为啥 时间为2016年7月。而且官网让我给他发邮局联系，你懂我的英语水平根本搞不明白他说了些啥。&lt;/p&gt;
&lt;h1 id=&quot;Algolia&quot;&gt;&lt;a href=&quot;#Algolia&quot; class=&quot;headerlink&quot; title=&quot;Algolia&quot;&gt;&lt;/a&gt;Algolia&lt;/h1&gt;&lt;p&gt;从 Algolia 管理界面和文档上来看不会比 Swiftype 差，可留作备选。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;官方网址&lt;/strong&gt; &lt;a href=&quot;https://www.algolia.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Algolia&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;序列化站点内容作为数据源，然后自己写查询方法。&quot;&gt;&lt;a href=&quot;#序列化站点内容作为数据源，然后自己写查询方法。&quot; class=&quot;headerlink&quot; title=&quot;序列化站点内容作为数据源，然后自己写查询方法。&quot;&gt;&lt;/a&gt;序列化站点内容作为数据源，然后自己写查询方法。&lt;/h1&gt;&lt;p&gt;好像有个Hexo的插件 &lt;a href=&quot;https://github.com/PaicHyperionDev/hexo-generator-search&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-generator-search&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作者写的文档：&lt;/strong&gt; &lt;a href=&quot;http://hahack.com/codes/local-search-engine-for-hexo/#stq=&amp;amp;stp=0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地址&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;目前我用的这种方式，哈哈，我给这自己写了个通用版的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先安装这个插件,主要为了生成search.xml&lt;/p&gt;
&lt;p&gt; &lt;code&gt;$ npm install --save hexo-generator-search&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置hexo根目录的&lt;code&gt;_confing.yml&lt;/code&gt;文件，在文件最后添加,具体参数代表含义看文档。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;search:&amp;#10;  path: search.xml&amp;#10;  field: post&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在&lt;code&gt;source&lt;/code&gt;文件夹下面创建一个html文件我的如下,我主要为了偷懒不去修改theme中的模板了。也可以按照作者的方式&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;doctype&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;搜索页面&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;http://code.jquery.com/jquery-latest.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; searchFunc = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;path, search_id, content_id&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;            &#39;use strict&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            $.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                url: path,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dataType: &lt;span class=&quot;string&quot;&gt;&quot;xml&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;xmlResponse&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// get the contents from search data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; datas = $(&lt;span class=&quot;string&quot;&gt;&quot;entry&quot;&lt;/span&gt;, xmlResponse).map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            title: $(&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).text(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            content: $(&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).text(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            url: $(&lt;span class=&quot;string&quot;&gt;&quot;url&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;).text()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;).get();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $input = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(search_id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $resultContent = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(content_id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    $input.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; str = &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;ul class=\&quot;search-result-list\&quot;&amp;gt;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; keywords = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.value.trim().toLowerCase().split(&lt;span class=&quot;regexp&quot;&gt;/[\s\-]+/&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        $resultContent.innerHTML = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.value.trim().length &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// perform local searching&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        datas.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; isMatch = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; content_index = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data_title = data.title.trim().toLowerCase();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data_content = data.content.trim().replace(&lt;span class=&quot;regexp&quot;&gt;/&amp;lt;[^&amp;gt;]+&amp;gt;/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;).toLowerCase();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data_url = data.url;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; index_title = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; index_content = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; first_occur = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;// only match artiles with not empty titles and contents&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data_title != &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt; &amp;amp;&amp;amp; data_content != &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                keywords.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;keyword, i&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    index_title = data_title.indexOf(keyword);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    index_content = data_content.indexOf(keyword);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (index_title &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; index_content &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        isMatch = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (index_content &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            index_content = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            first_occur = index_content;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;// show search results&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isMatch) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                str += &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;li&amp;gt;&amp;lt;a href=&#39;&quot;&lt;/span&gt; + data_url + &lt;span class=&quot;string&quot;&gt;&quot;&#39; class=&#39;search-result-title&#39;&amp;gt;&quot;&lt;/span&gt; + data_title + &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; content = data.content.trim().replace(&lt;span class=&quot;regexp&quot;&gt;/&amp;lt;[^&amp;gt;]+&amp;gt;/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (first_occur &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;comment&quot;&gt;// cut out 100 characters&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; start = first_occur - &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; end = first_occur + &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (start &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        start = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (start == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        end = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (end &amp;gt; content.length) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        end = content.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; match_content = content.substr(start, end);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;comment&quot;&gt;// highlight all keywords&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    keywords.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;keyword&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; regS = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(keyword, &lt;span class=&quot;string&quot;&gt;&quot;gi&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        match_content = match_content.replace(regS, &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;em class=\&quot;search-keyword\&quot;&amp;gt;&quot;&lt;/span&gt; + keyword + &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/em&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    str += &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;p class=\&quot;search-result\&quot;&amp;gt;&quot;&lt;/span&gt; + match_content + &lt;span class=&quot;string&quot;&gt;&quot;...&amp;lt;/p&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                str += &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/li&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        str += &lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/ul&amp;gt;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        $resultContent.innerHTML = str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;actionscript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;comment&quot;&gt;//注意这个地方要改成自己的博客地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        searchFunc(&lt;span class=&quot;string&quot;&gt;&quot;http://febsky.me/search.xml&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;local-search-input&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;local-search-result&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;site_search&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;local-search-input&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;q&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;results&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;0&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;placeholder&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;search my blog...&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;attribute&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;form-control&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;local-search-result&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后一步很重要，因为我们用了偷懒的方式，所以必须弥补&lt;/p&gt;
&lt;p&gt;在根目录的&lt;code&gt;_config.yml&lt;/code&gt; 中修改 skip_render 配置，意思是说不让模板来渲染，我们自己为这个html指定css样式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;skip_render:&amp;#10;    - search.html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样运行 &lt;code&gt;hexo d -g&lt;/code&gt; 之后，就可以用我们自己的域名加&lt;code&gt;/search.html&lt;/code&gt;的方式打开搜索界面了。例如我的是&lt;code&gt;http://febsky.me/search.html&lt;/code&gt; 很丑是吧，自己写css吧，还好我以前做web。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 至此就完成了本地检索引擎的实现，最后的工作就是修改样式，让检索页面更美观。在 searchFunc 函数中，作者已经为几个关键的页面元素设定了 css 名：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ul.search-result-list - 搜索结果列表的样式名；&lt;br&gt;a.search-result-title - 搜索结果文章标题的样式名；&lt;br&gt;p.search-result - 搜索结果每篇文章的预览段落的样式名；&lt;br&gt;em.search-keyword - 搜索结果每篇文章的预览段落中匹配关键词的样式名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;最后还有一个叫-lunrjs的东西&quot;&gt;&lt;a href=&quot;#最后还有一个叫-lunrjs的东西&quot; class=&quot;headerlink&quot; title=&quot;最后还有一个叫 lunrjs的东西&quot;&gt;&lt;/a&gt;最后还有一个叫 lunrjs的东西&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;官网：&lt;/strong&gt;&lt;a href=&quot;http://lunrjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://lunrjs.com/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Google-和-百度提供的站内搜索&quot;&gt;&lt;a href=&quot;#Google-和-百度提供的站内搜索&quot; class=&quot;headerlink&quot; title=&quot;Google 和 百度提供的站内搜索&quot;&gt;&lt;/a&gt;Google 和 百度提供的站内搜索&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;可行性：&lt;/strong&gt;Google 呵呵，你懂。百度 据说github拒绝百度的爬虫，如果你的网站部署在github首页上，可能不能成功。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用法：&lt;/strong&gt; 在google的输入框中输入  &lt;code&gt;site:fesky.me&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://febsky.me/categories/Hexo/"/>
    
      <category term="搜索" scheme="http://febsky.me/categories/Hexo/%E6%90%9C%E7%B4%A2/"/>
    
    
      <category term="Hexo" scheme="http://febsky.me/tags/Hexo/"/>
    
      <category term="站内搜索" scheme="http://febsky.me/tags/%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>Android开发我用到的Chrome插件</title>
    <link href="http://febsky.me/2016/07/05/2016-07-05-Android%E5%BC%80%E5%8F%91%E6%88%91%E7%94%A8%E5%88%B0%E7%9A%84Chrome%E6%8F%92%E4%BB%B6/"/>
    <id>http://febsky.me/2016/07/05/2016-07-05-Android开发我用到的Chrome插件/</id>
    <published>2016-07-05T05:35:51.000Z</published>
    <updated>2016-07-06T03:24:21.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Chrome调试WebView&quot;&gt;&lt;a href=&quot;#Chrome调试WebView&quot; class=&quot;headerlink&quot; title=&quot;Chrome调试WebView&quot;&gt;&lt;/a&gt;Chrome调试WebView&lt;/h1&gt;&lt;p&gt;&lt;code&gt;前提一定要开启手机USB调试模式&lt;/code&gt;如果千万不要丢了U&lt;/p&gt;
&lt;p&gt;在电脑上打开Chrome浏览器的菜单– 更多工具 – 检查设备（Chromemenu &amp;gt; More tools &amp;gt; Inspect Devices），或者直接在浏览器地址栏输入chrome://inspect 或者about:inspect&lt;/p&gt;
&lt;p&gt;然后自己瞎鼓捣就行了。&lt;/p&gt;
&lt;h1 id=&quot;Chrome（电脑端）操作Android真机（解放双手）&quot;&gt;&lt;a href=&quot;#Chrome（电脑端）操作Android真机（解放双手）&quot; class=&quot;headerlink&quot; title=&quot;Chrome（电脑端）操作Android真机（解放双手）&quot;&gt;&lt;/a&gt;Chrome（电脑端）操作Android真机（解放双手）&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Chrome有个叫做 &lt;code&gt;Vysor&lt;/code&gt; 的插件，可以直接在Chrome应用市场搜索。&lt;br&gt;可惜的是这个的免费版，画面太不清晰。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其实还有一个不是Chrome插件的东西，是Google开发的亲儿子，（简称ASM）是一款监视手机或者模拟器屏幕的工具，主要和上面相比分辨率高   &lt;a href=&quot;https://code.google.com/archive/p/android-screen-monitor/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android-screen-monitor&lt;/a&gt;  这个托管在GoogleCode上面，要科学上网！ 这个和上面的相比仅仅有监视的功能不能操作。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;配置方式：解压后将 &lt;code&gt;asm.jar&lt;/code&gt;拷贝到本机 &lt;code&gt;android-sdk\platform-tools&lt;/code&gt;目录下。然后命令行运行 &lt;code&gt;java -jar asm.jar&lt;/code&gt; 如果不copy到 platform-tools目录下，可能要配置Android sdk的环境变量。切记。&lt;/p&gt;
&lt;h1 id=&quot;Facebook出了一个叫做Stetho东西&quot;&gt;&lt;a href=&quot;#Facebook出了一个叫做Stetho东西&quot; class=&quot;headerlink&quot; title=&quot;Facebook出了一个叫做Stetho东西&quot;&gt;&lt;/a&gt;Facebook出了一个叫做&lt;a href=&quot;http://facebook.github.io/stetho/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stetho&lt;/a&gt;东西&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;作用：&lt;/strong&gt; 他能在Chrome控制台中查看app的网络请求，数据抓包，和app的数据库文件等等。但是要在app中引入库，具体的操作看官网吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Chrome调试WebView&quot;&gt;&lt;a href=&quot;#Chrome调试WebView&quot; class=&quot;headerlink&quot; title=&quot;Chrome调试WebView&quot;&gt;&lt;/a&gt;Chrome调试WebView&lt;/h1&gt;&lt;p&gt;&lt;code&gt;前提一定要开启手机USB
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="Chrome插件" scheme="http://febsky.me/categories/Android/Chrome%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="Chrome插件" scheme="http://febsky.me/tags/Chrome%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Android逆向工程用到的工具</title>
    <link href="http://febsky.me/2016/07/05/2016-07-05-Android%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E7%94%A8%E5%88%B0%E7%9A%84%E5%B7%A5%E5%85%B7/"/>
    <id>http://febsky.me/2016/07/05/2016-07-05-Android逆向工程用到的工具/</id>
    <published>2016-07-05T05:12:00.000Z</published>
    <updated>2016-07-18T07:27:58.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;第一套组合&quot;&gt;&lt;a href=&quot;#第一套组合&quot; class=&quot;headerlink&quot; title=&quot;第一套组合&quot;&gt;&lt;/a&gt;第一套组合&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/iBotPeaches/Apktool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apktool&lt;/a&gt; + &lt;a href=&quot;https://github.com/pxb1988/dex2jar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dex2jar&lt;/a&gt; + &lt;a href=&quot;https://github.com/java-decompiler/jd-gui&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jd-gui&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可惜的是apktool好像后来不再支持调试Smali文件，jd-gui 作者从 2015 年开始就停止了维护.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但是AndroidStudio有个调试Smali的插件  &lt;a href=&quot;SmaliIdea：https://github.com/JesusFreke/smali/wiki/smalidea&quot;&gt;地址 https://github.com/JesusFreke/smali/wiki/smalidea&lt;/a&gt;&lt;br&gt;据说jadx 不错，可以取代 jd-gui &lt;a href=&quot;https://github.com/skylot/jadx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地址 https://github.com/skylot/jadx&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Google-出的几个逆向分析工具&quot;&gt;&lt;a href=&quot;#Google-出的几个逆向分析工具&quot; class=&quot;headerlink&quot; title=&quot;Google 出的几个逆向分析工具&quot;&gt;&lt;/a&gt;Google 出的几个逆向分析工具&lt;/h1&gt;&lt;h2 id=&quot;1-enjarify&quot;&gt;&lt;a href=&quot;#1-enjarify&quot; class=&quot;headerlink&quot; title=&quot;1. enjarify  &quot;&gt;&lt;/a&gt;1. enjarify  &lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/google/enjarify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/google/enjarify&lt;/a&gt;&lt;br&gt;功能：可直接将 apk 文件还原成为 jar 文件，也可以和 dex2jar 一样，直接操作某个dex&lt;/p&gt;
&lt;p&gt;这是 Google 出品的一个逆向分析工具，从反编译成 jar 包的流程来说，要比 dex2jar 方便得多。下载完工具到本地并配置好 Python 环境后，需要修改 enjarify 目录下的 enjarify.bat 文件，将 python3 改为 python&lt;/p&gt;
&lt;h2 id=&quot;2-Procyon-和-cfr-和-Jad&quot;&gt;&lt;a href=&quot;#2-Procyon-和-cfr-和-Jad&quot; class=&quot;headerlink&quot; title=&quot;2. Procyon 和 cfr 和 Jad &quot;&gt;&lt;/a&gt;2. Procyon 和 cfr 和 Jad &lt;/h2&gt;&lt;p&gt;当然这几个不是Google的产物，这几个是&lt;code&gt;jar&lt;/code&gt; 和&lt;code&gt;.class&lt;/code&gt; 反编译工具。为啥要用这些，因为jd-gui，反编译java7会有问题。有些语法有点让人难以读懂。但是他有图形化界面剩下的这几个都没有。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://bitbucket.org/mstrobel/procyon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bitbucket.org/mstrobel/procyon&lt;/a&gt;&lt;br&gt;功能：将反编译得到 jar 包还原成 java 文件，同时能够更强的还原代码的逻辑结构  2016-07-12 持续更新中。。。据说有个图形化界面&lt;a href=&quot;https://github.com/deathmarine/Luyten&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/deathmarine/Luyten&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.benf.org/other/cfr/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.benf.org/other/cfr/&lt;/a&gt; 最新版 cfr_0_116.jar (July 2016) 持续更新中。。。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/JAD_(JAva_Decompiler&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jad&lt;/a&gt;)  //这货我没用过，不知道地址，好像也不怎么更新了，给的是wiki的地址。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;procyon 反编译jar包命令：(我用的是这个，比jd-gui好很多真的)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$ java -jar procyon-decompiler-0.5.30.jar -jar myJar.jar -o out&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;cfr 反编译jar包命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;java -jar cfr_0_79.jar example.jar -–outputdir out  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;3-ClassyShark&quot;&gt;&lt;a href=&quot;#3-ClassyShark&quot; class=&quot;headerlink&quot; title=&quot;3. ClassyShark&quot;&gt;&lt;/a&gt;3. ClassyShark&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/google/android-classyshark&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/google/android-classyshark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;功能：可直接浏览 Apk，支持对.dex, .aar, .so，.apk, .jar, .class等文件的操作。&lt;/p&gt;
&lt;p&gt;同意Google出品&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;java -jar ClassyShark.jar -open XXX.apk&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;4-bytecode-viewer&quot;&gt;&lt;a href=&quot;#4-bytecode-viewer&quot; class=&quot;headerlink&quot; title=&quot;4.bytecode-viewer&quot;&gt;&lt;/a&gt;4.bytecode-viewer&lt;/h2&gt;&lt;p&gt;最后说一个基于Procyon的项目 &lt;a href=&quot;https://github.com/Konloch/bytecode-viewer&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bytecode-viewer&lt;/a&gt;&lt;br&gt;A Java 8 Jar &amp;amp; Android APK Reverse Engineering Suite (Decompiler, Editor, Debugger &amp;amp; More) &lt;a href=&quot;https://bytecodeviewer.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://bytecodeviewer.com&lt;/a&gt;.  不知道如何没用过。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.febsky.me&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;me&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一套组合&quot;&gt;&lt;a href=&quot;#第一套组合&quot; class=&quot;headerlink&quot; title=&quot;第一套组合&quot;&gt;&lt;/a&gt;第一套组合&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/iBotPeaches/Apktool&quot; target=&quot;_
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
      <category term="反编译" scheme="http://febsky.me/categories/Android/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
      <category term="逆向工程" scheme="http://febsky.me/categories/Android/%E5%8F%8D%E7%BC%96%E8%AF%91/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="反编译" scheme="http://febsky.me/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
      <category term="逆向工程" scheme="http://febsky.me/tags/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python使用虚拟环境</title>
    <link href="http://febsky.me/2016/06/17/2016-06-17-Python%E4%BD%BF%E7%94%A8%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    <id>http://febsky.me/2016/06/17/2016-06-17-Python使用虚拟环境/</id>
    <published>2016-06-17T09:46:24.000Z</published>
    <updated>2016-07-07T06:12:28.000Z</updated>
    
    <content type="html">&lt;p&gt;Python的虚拟环境可以使一个Python程序拥有独立的库library和解释器interpreter，而不用与其他Python程序共享统一个library和interpreter。虚拟环境的好处是避免了不同Python程序间的互相影响（共同使用global library 和 interpreter），例如程序A需要某个库的1.0版本，而程序B需要同样这个库的2.0版本，如果程序B执行则A就不能执行了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装virtualenv：&lt;br&gt;&lt;code&gt;pip install virtualenv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建虚拟环境&lt;/p&gt;
&lt;p&gt;&lt;code&gt;virtualenv venv&lt;/code&gt;&lt;br&gt; venv是新创建的虚拟环境的名称。 同时会创建一个与虚拟环境名称相同的文件夹venv, 里面存储了一个独立的Python执行环境。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;进入虚拟环境&lt;/p&gt;
&lt;p&gt; &lt;code&gt;source venv/bin/activate&lt;/code&gt;&lt;br&gt; 进入虚拟环境后，命令行的提示符会加入虚拟环境的名称，例如：(venv)user@machine:~$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;退出虚拟环境&lt;br&gt; &lt;code&gt;deactivate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除虚拟环境&lt;br&gt; &lt;code&gt;rm -r venv&lt;/code&gt;&lt;br&gt; 直接删除虚拟环境所在的文件夹venv就删除了我们创建的venv虚拟环境。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Python的虚拟环境可以使一个Python程序拥有独立的库library和解释器interpreter，而不用与其他Python程序共享统一个library和interpreter。虚拟环境的好处是避免了不同Python程序间的互相影响（共同使用global librar
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Python常用的库</title>
    <link href="http://febsky.me/2016/06/17/2016-06-17-Python%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BA%93/"/>
    <id>http://febsky.me/2016/06/17/2016-06-17-Python常用的库/</id>
    <published>2016-06-16T17:55:08.000Z</published>
    <updated>2016-06-17T16:09:13.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;网络请求库 requests &lt;a href=&quot;http://cn.python-requests.org/zh_CN/latest/user/quickstart.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一份中文文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HTML解析  pyquery 或者 beautifulsoup&lt;/li&gt;
&lt;li&gt;orm库 sqlalchemy &lt;a href=&quot;http://gashero.yeax.com/?p=6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一份中文文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;种子解析libtorrent&lt;/li&gt;
&lt;li&gt;web Flask,flask-httpauth&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;【参考】&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/vovlie/p/4182814.html?utm_source=tuicool&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用Flask设计带认证的Restfull&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;网络请求库 requests &lt;a href=&quot;http://cn.python-requests.org/zh_CN/latest/user/quickstart.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一份中文文档&lt;/a&gt;&lt;
    
    </summary>
    
      <category term="Python" scheme="http://febsky.me/categories/Python/"/>
    
    
      <category term="Python" scheme="http://febsky.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python日期时间的处理</title>
    <link href="http://febsky.me/2016/06/14/2016-06-14-Python%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E7%9A%84%E5%A4%84%E7%90%86/"/>
    <id>http://febsky.me/2016/06/14/2016-06-14-Python日期时间的处理/</id>
    <published>2016-06-14T14:04:19.000Z</published>
    <updated>2016-07-14T07:51:13.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;首先导入时间日期模块&quot;&gt;&lt;a href=&quot;#首先导入时间日期模块&quot; class=&quot;headerlink&quot; title=&quot;首先导入时间日期模块&quot;&gt;&lt;/a&gt;首先导入时间日期模块&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;string转datetime&quot;&gt;&lt;a href=&quot;#string转datetime&quot; class=&quot;headerlink&quot; title=&quot;string转datetime&quot;&gt;&lt;/a&gt;string转datetime&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str = &lt;span class=&quot;string&quot;&gt;&#39;2012-11-19&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date_time = datetime.datetime.strptime(str,&lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;datetime转string&quot;&gt;&lt;a href=&quot;#datetime转string&quot; class=&quot;headerlink&quot; title=&quot;datetime转string&quot;&gt;&lt;/a&gt;datetime转string&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;date_time = datetime.datetime(&lt;span class=&quot;number&quot;&gt;2012&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date_time.strftime(&lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;datetime-获取date&quot;&gt;&lt;a href=&quot;#datetime-获取date&quot; class=&quot;headerlink&quot; title=&quot;datetime 获取date&quot;&gt;&lt;/a&gt;datetime 获取date&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;date_time.date()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;datetime转时间戳&quot;&gt;&lt;a href=&quot;#datetime转时间戳&quot; class=&quot;headerlink&quot; title=&quot;datetime转时间戳&quot;&gt;&lt;/a&gt;datetime转时间戳&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;time_time = time.mktime(date_time.timetuple())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; time_time&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;时间戳转string&quot;&gt;&lt;a href=&quot;#时间戳转string&quot; class=&quot;headerlink&quot; title=&quot;时间戳转string&quot;&gt;&lt;/a&gt;时间戳转string&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;time.strftime(&lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d&#39;&lt;/span&gt;,time.localtime(time_time))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;time（时间戳）与datetime之间的互相转换&quot;&gt;&lt;a href=&quot;#time（时间戳）与datetime之间的互相转换&quot; class=&quot;headerlink&quot; title=&quot;time（时间戳）与datetime之间的互相转换&quot;&gt;&lt;/a&gt;time（时间戳）与datetime之间的互相转换&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#注释 time.time() 返回的是毫秒值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datetime.datetime.fromtimestamp(time.time())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;date转datetime&quot;&gt;&lt;a href=&quot;#date转datetime&quot; class=&quot;headerlink&quot; title=&quot;date转datetime&quot;&gt;&lt;/a&gt;date转datetime&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;date = datetime.date.today()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; date    &lt;span class=&quot;comment&quot;&gt;##datetime.date(2012,11,19)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datetime.datetime.strptime(str(date),&lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;#将date转换为str，在由str转换为datetime&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datetime.datetime(&lt;span class=&quot;number&quot;&gt;2012&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;##time模块&lt;/p&gt;
&lt;p&gt;time模块提供各种操作时间的函数，一般有两种表示时间的方式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一种是时间戳的方式(相对于1970.1.1 00:00:00以秒计算的偏移量),时间戳是惟一的&lt;/li&gt;
&lt;li&gt;第二种以数组的形式表示即(struct_time),共有九个元素，分别表示，同一个时间戳的struct_time会因为时区不同而不同&lt;/li&gt;
&lt;li&gt;gmtime()与mktime（）可以将两种时间表示方法自由转换&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【参考文献】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://iam42.iteye.com/blog/1922875&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;time 和 datetime之间的关系&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;首先导入时间日期模块&quot;&gt;&lt;a href=&quot;#首先导入时间日期模块&quot; class=&quot;headerlink&quot; title=&quot;首先导入时间日期模块&quot;&gt;&lt;/a&gt;首先导入时间日期模块&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;string转datetime&quot;&gt;&lt;a href=&quot;#string转datetime&quot; class=&quot;headerlink&quot; title=&quot;string转datetime&quot;&gt;&lt;/a&gt;string转datetime&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str = &lt;span class=&quot;string&quot;&gt;&#39;2012-11-19&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date_time = datetime.datetime.strptime(str,&lt;span class=&quot;string&quot;&gt;&#39;%Y-%m-%d&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="http://febsky.me/categories/Python/"/>
    
    
      <category term="Python" scheme="http://febsky.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Android开发中图文并排插件</title>
    <link href="http://febsky.me/2016/06/13/2016-06-13-Android%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E5%9B%BE%E6%96%87%E5%B9%B6%E6%8E%92%E6%8F%92%E4%BB%B6/"/>
    <id>http://febsky.me/2016/06/13/2016-06-13-Android开发中的图文并排插件/</id>
    <published>2016-06-13T09:33:37.000Z</published>
    <updated>2016-06-13T02:19:11.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sufficientlysecure/html-textview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;html-textview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zzhoujay/RichText&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RichText&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sufficientlysecure/html-textview&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;html-textview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;ht
    
    </summary>
    
      <category term="Android" scheme="http://febsky.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题目录介绍</title>
    <link href="http://febsky.me/2016/06/03/2016-06-03-Hexo%E4%B8%BB%E9%A2%98%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D/"/>
    <id>http://febsky.me/2016/06/03/2016-06-03-Hexo主题目录介绍/</id>
    <published>2016-06-03T04:37:28.000Z</published>
    <updated>2016-06-12T02:29:19.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;分析主题目录&quot;&gt;&lt;a href=&quot;#分析主题目录&quot; class=&quot;headerlink&quot; title=&quot;分析主题目录&quot;&gt;&lt;/a&gt;分析主题目录&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;存放所有主题的文件目录&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;themes&amp;#10;    |--my_theme&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;某个特定主题目录&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;my_theme&amp;#10;    |-- _config.yml&amp;#10;    |-- languages/&amp;#10;    |-- layout/&amp;#10;    &amp;#9;|-- _partial/&amp;#10;&amp;#9;&amp;#9;|-- _widget/&amp;#10;&amp;#9;&amp;#9;|-- archive.ejs *&amp;#10;&amp;#9;&amp;#9;|-- category.ejs *&amp;#10;&amp;#9;&amp;#9;|-- index.ejs *&amp;#10;&amp;#9;&amp;#9;|-- layout.ejs *&amp;#10;&amp;#9;&amp;#9;|-- page.ejs *&amp;#10;&amp;#9;&amp;#9;|-- post.ejs *&amp;#10;&amp;#9;&amp;#9;|-- tag.ejs *&amp;#10;    |-- LICENSE&amp;#10;    |-- README.md&amp;#10;    |-- source/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;layout/&lt;/code&gt;&lt;br&gt;以上打&lt;code&gt;*&lt;/code&gt;的文件表示，每个主题至少需要这些文件。所有的主题都是用layout.ejs作为默认的布局文件，你也可以自定义布局文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;_widget/&lt;/code&gt;： 小工具目录，在my_theme主题中对右边栏的控制。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_partial/&lt;/code&gt;： 组件目录，给博客添加统计、评论等功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;source/&lt;/code&gt;&lt;br&gt;主题资源目录，主题用到的CSS、Javascript等文件需要放在这个目录中，会被编译到hexo的public目录中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;_config.yml&lt;/code&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;menu:        #&amp;#31449;&amp;#28857;&amp;#23548;&amp;#33322;&amp;#26639; &amp;#65288;&amp;#26631;&amp;#31614;: &amp;#36335;&amp;#24452;&amp;#65289;&amp;#10;  &amp;#39318;&amp;#39029;: /&amp;#10;  &amp;#24402;&amp;#26723;: /archives&amp;#10;  &amp;#20851;&amp;#20110;: /about&amp;#10;&amp;#10;widgets:        #&amp;#23567;&amp;#24037;&amp;#20855; &amp;#21363;&amp;#31449;&amp;#28857;&amp;#30340;&amp;#21491;&amp;#36793;&amp;#19968;&amp;#26639; &amp;#39029;&amp;#38754;&amp;#20250;&amp;#25353;&amp;#36825;&amp;#37324;&amp;#30340;&amp;#39034;&amp;#24207;&amp;#25490;&amp;#21015;&amp;#10;- recent_posts&amp;#10;- category&amp;#10;- weibo_show&amp;#10;- blogroll&amp;#10;&amp;#10;excerpt_link: &amp;#38405;&amp;#35835;&amp;#20840;&amp;#25991;   #&amp;#40664;&amp;#35748;&amp;#26159;Read more &amp;#21487;&amp;#20197;&amp;#25913;&amp;#25104;&amp;#20013;&amp;#25991;&amp;#10;&amp;#10;twitter:    #&amp;#22681;&amp;#20869;&amp;#24456;&amp;#23569;&amp;#29992;&amp;#27492;&amp;#40479;&amp;#65292;so&amp;#21487;&amp;#20197;&amp;#21024;&amp;#25481;&amp;#10;&amp;#10;addthis:    #&amp;#36825;&amp;#20010;&amp;#20063;&amp;#21487;&amp;#20197;&amp;#21024;&amp;#25481;&amp;#10;  enable: true&amp;#10;&amp;#10;fancybox: true&amp;#10;&amp;#10;baidu_analytics: true    #&amp;#30334;&amp;#24230;&amp;#32479;&amp;#35745;&amp;#65292;&amp;#22825;&amp;#26397;&amp;#36824;&amp;#26159;&amp;#36825;&amp;#20010;&amp;#22909;&amp;#20351;&amp;#65292;&amp;#27809;&amp;#21150;&amp;#27861;&amp;#28404;&amp;#10;&amp;#10;google_analytics:        #&amp;#40664;&amp;#35748;&amp;#32479;&amp;#35745;&amp;#65292;&amp;#22810;&amp;#20040;&amp;#24076;&amp;#26395;&amp;#29992;&amp;#36825;&amp;#20010;&amp;#32479;&amp;#35745;&amp;#65292;&amp;#21487;&amp;#24796;&amp;#10;&amp;#10;rss: /atom.xml        #RSS&amp;#10;&amp;#10;comment_provider:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;每一个主题至少都要包含一个index模版，下面是各页面对应的模版名称：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;index 首页&lt;/li&gt;
&lt;li&gt;post 文章&lt;/li&gt;
&lt;li&gt;page 分页&lt;/li&gt;
&lt;li&gt;archive 归档&lt;/li&gt;
&lt;li&gt;category 分类归档&lt;/li&gt;
&lt;li&gt;tag 标签归档&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;分析主题目录&quot;&gt;&lt;a href=&quot;#分析主题目录&quot; class=&quot;headerlink&quot; title=&quot;分析主题目录&quot;&gt;&lt;/a&gt;分析主题目录&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;存放所有主题的文件目录&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highli
    
    </summary>
    
      <category term="Hexo" scheme="http://febsky.me/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://febsky.me/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Mac下的某些命令</title>
    <link href="http://febsky.me/2016/05/29/2016-05-29-Mac%E4%B8%8B%E7%9A%84%E6%9F%90%E4%BA%9B%E5%91%BD%E4%BB%A4/"/>
    <id>http://febsky.me/2016/05/29/2016-05-29-Mac下的某些命令/</id>
    <published>2016-05-29T07:51:03.000Z</published>
    <updated>2016-06-02T15:11:43.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;code&gt;open .&lt;/code&gt; 单开finder为当前目录&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;code&gt;open .&lt;/code&gt; 单开finder为当前目录&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://febsky.me/categories/Mac/"/>
    
      <category term="命令行" scheme="http://febsky.me/categories/Mac/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
    
      <category term="Mac" scheme="http://febsky.me/tags/Mac/"/>
    
      <category term="命令行" scheme="http://febsky.me/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>Android 开发中的小技巧</title>
    <link href="http://febsky.me/2016/05/28/2016-05-16-Android%E4%B8%AD%E7%9A%84%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://febsky.me/2016/05/28/2016-05-16-Android中的小技巧/</id>
    <published>2016-05-28T08:39:22.000Z</published>
    <updated>2016-07-06T05:36:08.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;ListView小技巧&quot;&gt;&lt;a href=&quot;#ListView小技巧&quot; class=&quot;headerlink&quot; title=&quot;ListView小技巧&quot;&gt;&lt;/a&gt;ListView小技巧&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;可以设置空白站位View &lt;code&gt;listView.setEmptyView(view);&lt;/code&gt;非常有用&lt;/li&gt;
&lt;li&gt;缓慢滚动到某个位置&lt;code&gt;listView.smoothScrollToPosition();&lt;/code&gt;当然还有其他的滚动方法&lt;/li&gt;
&lt;li&gt;在使用&lt;code&gt;adapter.notifyDataSetChanged()&lt;/code&gt;方法的时候，必须保证传进adapter的数据List是同一个对象，否则无法实现效果（我就犯过这个错）&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;滚动和位置&quot;&gt;&lt;a href=&quot;#滚动和位置&quot; class=&quot;headerlink&quot; title=&quot;滚动和位置&quot;&gt;&lt;/a&gt;滚动和位置&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scrollTo&lt;/code&gt;方法其实滚动的是内容，比如说TextView中滚动的是文字。比如：&lt;code&gt;textView.scrollTo(0, 10);&lt;/code&gt;意思是让TextView中的内容，的（0，10）坐标去和，TextView左上角对齐。&lt;/li&gt;
&lt;li&gt;滑动多少算是滑动了&lt;code&gt;ViewConfiguration.get(this).getScaledTouchSlop();&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;所谓的滑动，是相对于参考系的运动&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getX&lt;/code&gt;,&lt;code&gt;getY&lt;/code&gt; 获取的是相对于父view的相对位置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getRawX&lt;/code&gt;,&lt;code&gt;getRawY&lt;/code&gt;获取的是点击位置距离屏幕左边和上边的距离&lt;/li&gt;
&lt;li&gt;Scroller类可以实现平滑的移动效果&lt;/li&gt;
&lt;li&gt;实现拖拽效果&lt;code&gt;DrawerLayout&lt;/code&gt;,&lt;code&gt;SlidingPaneLayout&lt;/code&gt;,&lt;code&gt;ViewDragHelper&lt;/code&gt;,尤其是最后一个。非常diao~  &lt;ul&gt;
&lt;li&gt;SlidingPaneLayout 效果是中间的内容块向右移动，以显示出左边的内容。只支持左侧显示  &lt;/li&gt;
&lt;li&gt;DrawerLayout 支持左滑右滑 效果是左右侧的内容盖住中间的内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;扩大View的触摸和点击响应范围&quot;&gt;&lt;a href=&quot;#扩大View的触摸和点击响应范围&quot; class=&quot;headerlink&quot; title=&quot;扩大View的触摸和点击响应范围&quot;&gt;&lt;/a&gt;扩大View的触摸和点击响应范围&lt;/h1&gt;&lt;p&gt;&lt;code&gt;setTouchDelegate()&lt;/code&gt;方法&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ListView小技巧&quot;&gt;&lt;a href=&quot;#ListView小技巧&quot; class=&quot;headerlink&quot; title=&quot;ListView小技巧&quot;&gt;&lt;/a&gt;ListView小技巧&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;可以设置空白站位View &lt;code&gt;listView.setEmptyView(view);&lt;/code&gt;非常有用&lt;/li&gt;
&lt;li&gt;缓慢滚动到某个位置&lt;code&gt;listView.smoothScrollToPosition();&lt;/code&gt;当然还有其他的滚动方法&lt;/li&gt;
&lt;li&gt;在使用&lt;code&gt;adapter.notifyDataSetChanged()&lt;/code&gt;方法的时候，必须保证传进adapter的数据List是同一个对象，否则无法实现效果（我就犯过这个错）&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Java" scheme="http://febsky.me/categories/Java/"/>
    
      <category term="Android" scheme="http://febsky.me/categories/Java/Android/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="Java" scheme="http://febsky.me/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Android SQLite存储自定义对象</title>
    <link href="http://febsky.me/2016/05/23/2016-05-23-AndroidSQLite%E5%AD%98%E5%82%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AF%B9%E8%B1%A1/"/>
    <id>http://febsky.me/2016/05/23/2016-05-23-AndroidSQLite存储自定义对象/</id>
    <published>2016-05-23T08:39:22.000Z</published>
    <updated>2016-06-02T15:20:39.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Android-SQLite存储自定义对象&quot;&gt;&lt;a href=&quot;#Android-SQLite存储自定义对象&quot; class=&quot;headerlink&quot; title=&quot;Android SQLite存储自定义对象&quot;&gt;&lt;/a&gt;Android SQLite存储自定义对象&lt;/h1&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;1. 首先给出JavaBean&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class Student implements Serializable &amp;#123;&amp;#10;&amp;#10;&amp;#9;/**&amp;#10;&amp;#9; * &amp;#10;&amp;#9; */&amp;#10;&amp;#9;private static final long serialVersionUID = 1L;&amp;#10;&amp;#9;String name;&amp;#10;&amp;#9;int age;&amp;#10;&amp;#10;&amp;#9;public Student(String name, int age) &amp;#123;&amp;#10;&amp;#9;&amp;#9;super();&amp;#10;&amp;#9;&amp;#9;this.name = name;&amp;#10;&amp;#9;&amp;#9;this.age = age;&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#9;public String getName() &amp;#123;&amp;#10;&amp;#9;&amp;#9;return name;&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#9;public void setName(String name) &amp;#123;&amp;#10;&amp;#9;&amp;#9;this.name = name;&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#9;public int getAge() &amp;#123;&amp;#10;&amp;#9;&amp;#9;return age;&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#9;public void setAge(int age) &amp;#123;&amp;#10;&amp;#9;&amp;#9;this.age = age;&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;2. 然后给出Dbhelper&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/***&amp;#10; * &amp;#21333;&amp;#20363;&amp;#27169;&amp;#24335;&amp;#23454;&amp;#29616;&amp;#25968;&amp;#25454;&amp;#24211;&amp;#36830;&amp;#25509;&amp;#10; * @author bobo&amp;#10; *&amp;#10; */&amp;#10;public class Dbhelper extends SQLiteOpenHelper &amp;#123;&amp;#10;&amp;#10;&amp;#9;private static Dbhelper dbhelper = null;&amp;#10;&amp;#10;&amp;#9;public static Dbhelper getInstens(Context context) &amp;#123;&amp;#10;&amp;#9;&amp;#9;if (dbhelper == null) &amp;#123;&amp;#10;&amp;#9;&amp;#9;&amp;#9;dbhelper = new Dbhelper(context);&amp;#10;&amp;#9;&amp;#9;&amp;#125;&amp;#10;&amp;#9;&amp;#9;return dbhelper;&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#9;private Dbhelper(Context context) &amp;#123;&amp;#10;&amp;#9;&amp;#9;super(context, &amp;#34;datebase.db&amp;#34;, null, 1);&amp;#10;&amp;#9;&amp;#9;// TODO Auto-generated constructor stub&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#9;@Override&amp;#10;&amp;#9;public void onCreate(SQLiteDatabase db) &amp;#123;&amp;#10;&amp;#9;&amp;#9;// TODO Auto-generated method stub&amp;#10;&amp;#9;&amp;#9;&amp;#10;&amp;#9;&amp;#9; //&amp;#36825;&amp;#24352;&amp;#34920;&amp;#37319;&amp;#29992;&amp;#20108;&amp;#36827;&amp;#21046;&amp;#25991;&amp;#20214;&amp;#23384;&amp;#20648;&amp;#23545;&amp;#35937;&amp;#27880;&amp;#24847;&amp;#31532;&amp;#20108;&amp;#20010;&amp;#23383;&amp;#27573;&amp;#25105;&amp;#20204;&amp;#23558;&amp;#23545;&amp;#35937;&amp;#23384;&amp;#21462;&amp;#22312;&amp;#36825;&amp;#37324;&amp;#38754;&amp;#10;&amp;#9;&amp;#9;String sql_class_table=&amp;#34;create table if not exists classtable(_id integer primary key autoincrement,classtabledata text)&amp;#34;;&amp;#10;&amp;#9;&amp;#9;db.execSQL(sql_class_table);&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#9;@Override&amp;#10;&amp;#9;public void onUpgrade(SQLiteDatabase db, int oldversion, int newversion) &amp;#123;&amp;#10;&amp;#9;&amp;#9;// TODO Auto-generated method stub&amp;#10;&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;3. 最后是一个数据库操作类Dao 或者 叫service&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最后是一个数据库操作类，最主要的方法在这个类里面，通过二进制流把对象转换为对象流然后取出二进制存取进数据库，最后取的时候也一样。首先取出二进制对象，然后通过流还原对象。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&amp;#10; * &amp;#25968;&amp;#25454;&amp;#24211;&amp;#25805;&amp;#20316;&amp;#10; * @author bobo&amp;#10; *&amp;#10; */&amp;#10;public class StudentServcie &amp;#123;&amp;#10;&amp;#9;Context context;&amp;#10;&amp;#10;&amp;#9;public StudentServcie(Context context) &amp;#123;&amp;#10;&amp;#9;&amp;#9;// TODO Auto-generated constructor stub&amp;#10;&amp;#9;&amp;#9;this.context = context;&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#9;/**&amp;#10;&amp;#9; * &amp;#20445;&amp;#23384;&amp;#10;&amp;#9; * @param student&amp;#10;&amp;#9; */&amp;#10;&amp;#9;public void saveObject(Student student) &amp;#123;&amp;#10;&amp;#9;&amp;#9;ByteArrayOutputStream arrayOutputStream = new ByteArrayOutputStream();&amp;#10;&amp;#9;&amp;#9;try &amp;#123;&amp;#10;&amp;#9;&amp;#9;&amp;#9;ObjectOutputStream objectOutputStream = new ObjectOutputStream(arrayOutputStream);&amp;#10;&amp;#9;&amp;#9;&amp;#9;objectOutputStream.writeObject(student);&amp;#10;&amp;#9;&amp;#9;&amp;#9;objectOutputStream.flush();&amp;#10;&amp;#9;&amp;#9;&amp;#9;byte data[] = arrayOutputStream.toByteArray();&amp;#10;&amp;#9;&amp;#9;&amp;#9;objectOutputStream.close();&amp;#10;&amp;#9;&amp;#9;&amp;#9;arrayOutputStream.close();&amp;#10;&amp;#9;&amp;#9;&amp;#9;Dbhelper dbhelper = Dbhelper.getInstens(context);&amp;#10;&amp;#9;&amp;#9;&amp;#9;SQLiteDatabase database = dbhelper.getWritableDatabase();&amp;#10;&amp;#9;&amp;#9;&amp;#9;database.execSQL(&amp;#34;insert into classtable (classtabledata) values(?)&amp;#34;, new Object[] &amp;#123; data &amp;#125;);&amp;#10;&amp;#9;&amp;#9;&amp;#9;database.close();&amp;#10;&amp;#9;&amp;#9;&amp;#125; catch (Exception e) &amp;#123;&amp;#10;&amp;#9;&amp;#9;&amp;#9;// TODO Auto-generated catch block&amp;#10;&amp;#9;&amp;#9;&amp;#9;e.printStackTrace();&amp;#10;&amp;#9;&amp;#9;&amp;#125;&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#9;public Student getObject() &amp;#123;&amp;#10;&amp;#9;&amp;#9;Student student = null;&amp;#10;&amp;#9;&amp;#9;Dbhelper dbhelper = Dbhelper.getInstens(context);&amp;#10;&amp;#9;&amp;#9;SQLiteDatabase database = dbhelper.getReadableDatabase();&amp;#10;&amp;#9;&amp;#9;Cursor cursor = database.rawQuery(&amp;#34;select * from classtable&amp;#34;, null);&amp;#10;&amp;#9;&amp;#9;if (cursor != null) &amp;#123;&amp;#10;&amp;#9;&amp;#9;&amp;#9;while (cursor.moveToNext()) &amp;#123;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;byte data[] = cursor.getBlob(cursor.getColumnIndex(&amp;#34;classtabledata&amp;#34;));&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;ByteArrayInputStream arrayInputStream = new ByteArrayInputStream(data);&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;try &amp;#123;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;ObjectInputStream inputStream = new ObjectInputStream(arrayInputStream);&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;student = (Student) inputStream.readObject();&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;inputStream.close();&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;arrayInputStream.close();&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;break;//&amp;#36825;&amp;#37324;&amp;#20026;&amp;#20102;&amp;#27979;&amp;#35797;&amp;#23601;&amp;#21462;&amp;#19968;&amp;#20010;&amp;#25968;&amp;#25454;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#125; catch (Exception e) &amp;#123;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;// TODO Auto-generated catch block&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#9;e.printStackTrace();&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#9;&amp;#125;&amp;#10;&amp;#10;&amp;#9;&amp;#9;&amp;#9;&amp;#125;&amp;#10;&amp;#9;&amp;#9;&amp;#125;&amp;#10;&amp;#9;&amp;#9;return student;&amp;#10;&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;4. 最后是测试代码&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class MainActivity extends Activity &amp;#123;&amp;#10;&amp;#9;StudentServcie servcie;&amp;#10;&amp;#10;&amp;#9;@Override&amp;#10;&amp;#9;protected void onCreate(Bundle savedInstanceState) &amp;#123;&amp;#10;&amp;#9;&amp;#9;super.onCreate(savedInstanceState);&amp;#10;&amp;#9;&amp;#9;setContentView(R.layout.activity_main);&amp;#10;&amp;#9;&amp;#9;servcie = new StudentServcie(this);&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#9;public void onclick(View view) &amp;#123;&amp;#10;&amp;#9;&amp;#9;switch (view.getId()) &amp;#123;&amp;#10;&amp;#9;&amp;#9;case R.id.save:&amp;#10;&amp;#9;&amp;#9;&amp;#9;servcie.saveObject(new Student(&amp;#34;&amp;#26446;&amp;#38647;&amp;#34;, 20));&amp;#10;&amp;#9;&amp;#9;&amp;#9;Toast.makeText(this, &amp;#34;&amp;#23384;&amp;#21462;&amp;#23436;&amp;#25104;&amp;#34;, 0).show();&amp;#10;&amp;#9;&amp;#9;&amp;#9;break;&amp;#10;&amp;#9;&amp;#9;case R.id.load:&amp;#10;&amp;#9;&amp;#9;&amp;#9;Student student =&amp;#9;servcie.getObject();&amp;#10;&amp;#9;&amp;#9;&amp;#9;if(student!=null)&amp;#10;&amp;#9;&amp;#9;&amp;#9;Toast.makeText(this, student.getName()+student.getAge(), 0).show();&amp;#10;&amp;#9;&amp;#9;&amp;#9;break;&amp;#10;&amp;#9;&amp;#9;&amp;#125;&amp;#10;&amp;#9;&amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同样我们也可以对list，或者map对象进行保存，方法跟上面的一样，但是map或者list里面的对象必须序列化。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【参考文献】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是转载 &lt;a href=&quot;http://blog.csdn.net/codebob/article/details/37091003&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文地址点这里&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Android-SQLite存储自定义对象&quot;&gt;&lt;a href=&quot;#Android-SQLite存储自定义对象&quot; class=&quot;headerlink&quot; title=&quot;Android SQLite存储自定义对象&quot;&gt;&lt;/a&gt;Android SQLite存储自定义对象&lt;/h1&gt;
    
    </summary>
    
      <category term="Java" scheme="http://febsky.me/categories/Java/"/>
    
      <category term="Android" scheme="http://febsky.me/categories/Java/Android/"/>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="Java" scheme="http://febsky.me/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>我认为不错的几个Hexo主题</title>
    <link href="http://febsky.me/2016/05/15/2016-05-15-%E6%88%91%E8%AE%A4%E4%B8%BA%E4%B8%8D%E9%94%99%E7%9A%84%E5%87%A0%E4%B8%AAHexo%E4%B8%BB%E9%A2%98/"/>
    <id>http://febsky.me/2016/05/15/2016-05-15-我认为不错的几个Hexo主题/</id>
    <published>2016-05-15T04:37:28.000Z</published>
    <updated>2016-06-12T01:31:20.000Z</updated>
    
    <content type="html">&lt;p&gt;我认为几个不错的主题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kaijun/hexo-theme-huxblog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-huxblog&lt;/a&gt;   &lt;a href=&quot;http://huangxuan.me/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;演示地址 Hux Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ahonn/hexo-theme-even&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-even&lt;/a&gt;    &lt;a href=&quot;http://www.ahonn.me/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;演示地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ppoffice/hexo-theme-icarus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-icarus&lt;/a&gt;   &lt;a href=&quot;http://blog.zhangruipeng.me/hexo-theme-icarus/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;演示地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Alex-fun/hexo-theme-jane&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-jane&lt;/a&gt;   &lt;a href=&quot;http://hejx.me/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;演示地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/xiangming/landscape-plus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;landscape-plus&lt;/a&gt; &lt;a href=&quot;http://honglu.me/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;演示地址&lt;/a&gt;  &lt;a href=&quot;http://arvinxiang.com/landscape-plus/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;And&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pinggod/hexo-theme-apollo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-apollo&lt;/a&gt; &lt;a href=&quot;http://pinggod.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;演示地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://haojen.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-Anisina&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;主题的制作&quot;&gt;&lt;a href=&quot;#主题的制作&quot; class=&quot;headerlink&quot; title=&quot;主题的制作&quot;&gt;&lt;/a&gt;主题的制作&lt;/h1&gt;&lt;p&gt;有两篇很不错的文章&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.maintao.com/2014/hexo-theme-from-scratch/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;从零开始定制hexo主题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://w3cboy.com/post/2014/05/%E4%B8%80%E8%B5%B7%E6%9D%A5%E5%81%9A%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一起来做博客——主题和部署&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://syxiaqj.github.io/2014/02/19/introduce-hexo-theme/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;introduce-hexo-theme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我认为几个不错的主题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kaijun/hexo-theme-huxblog/&quot;&gt;hexo-theme-huxblog&lt;/a&gt;   &lt;a href=&quot;http://huangxuan.me/&quot;&gt;演示地址 Hux Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ahonn/hexo-theme-even&quot;&gt;hexo-theme-even&lt;/a&gt;    &lt;a href=&quot;http://www.ahonn.me/&quot;&gt;演示地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ppoffice/hexo-theme-icarus&quot;&gt;hexo-theme-icarus&lt;/a&gt;   &lt;a href=&quot;http://blog.zhangruipeng.me/hexo-theme-icarus/&quot;&gt;演示地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Alex-fun/hexo-theme-jane&quot;&gt;hexo-theme-jane&lt;/a&gt;   &lt;a href=&quot;http://hejx.me/&quot;&gt;演示地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/xiangming/landscape-plus&quot;&gt;landscape-plus&lt;/a&gt; &lt;a href=&quot;http://honglu.me/&quot;&gt;演示地址&lt;/a&gt;  &lt;a href=&quot;http://arvinxiang.com/landscape-plus/&quot;&gt;And&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pinggod/hexo-theme-apollo&quot;&gt;hexo-theme-apollo&lt;/a&gt; &lt;a href=&quot;http://pinggod.com/&quot;&gt;演示地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://haojen.github.io/&quot;&gt;hexo-theme-Anisina&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://febsky.me/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://febsky.me/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Android SQLite操作</title>
    <link href="http://febsky.me/2016/05/10/2016-05-10-Android%E6%93%8D%E4%BD%9CSQLite%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://febsky.me/2016/05/10/2016-05-10-Android操作SQLite数据库的方法/</id>
    <published>2016-05-10T04:14:42.000Z</published>
    <updated>2016-05-13T15:57:06.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;一、-SQLiteOpenHelper辅助类&quot;&gt;&lt;a href=&quot;#一、-SQLiteOpenHelper辅助类&quot; class=&quot;headerlink&quot; title=&quot;一、 SQLiteOpenHelper辅助类&quot;&gt;&lt;/a&gt;一、 SQLiteOpenHelper辅助类&lt;/h1&gt;&lt;p&gt;SQLiteOpenHelper类是一个辅助类，用于创建或打开数据库。&lt;br&gt;该类的使用方法一般是自定义一个子类，继承自SQLiteOpenHelper，并覆写其中最关键的两个方法：onCreate(SQLiteDatabase db)和onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion)。当新建一个数据库时会调用前者，一般在里面做一些创建表或视图的操作。数据库版本升级时则会调用后者。&lt;/p&gt;
&lt;p&gt;定义好子类后（假如叫SqlHelper），只要调用SqlHelper对象的getReadableDatabase()方法或getWritableDatabase()方法即可返回一个SQLiteDatabase对象。如果是第一次调用，则会创建数据库。随后可使用SQLiteDatabase对象的方法进行数据操作，如：execSQL(), insert(), update(), query(), rawQuery(), delete()等。&lt;/p&gt;
&lt;p&gt;PS：通过该方法创建的数据库存放的目录是固定的，其路径为/data/data/packageName/databases/。&lt;/p&gt;
&lt;h1 id=&quot;二、Context类的openOrCreateDatabase-方法&quot;&gt;&lt;a href=&quot;#二、Context类的openOrCreateDatabase-方法&quot; class=&quot;headerlink&quot; title=&quot;二、Context类的openOrCreateDatabase()方法&quot;&gt;&lt;/a&gt;二、Context类的openOrCreateDatabase()方法&lt;/h1&gt;&lt;p&gt;openOrCreateDatabase(String dbName, int mode, CursorFactory factory);&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dbName：数据库名称。&lt;/li&gt;
&lt;li&gt;mode：数据库操作模式。默认值为MODE_PRIVATE（即0）。可选值：MODE_WORLD_READABLE, MODE_WORLD_WRITABLE, MODE_ENABLE_WRITE_AHEAD_LOGGING&lt;/li&gt;
&lt;li&gt;factory：附加的一个工厂类，当SQLiteDatabase实例的query函数被调用时，会使用该工厂类返回一个Cursor。可为null。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private static final String DATABASE_NAME = &amp;#8220;myDatabase.db&amp;#8221;;&amp;#10;private static final String DATABASE_TABLE = &amp;#8220;mainTable&amp;#8221;;&amp;#10;private static final String DATABASE_CREATE =&amp;#10;&amp;#8220;create table &amp;#8220; + DATABASE_TABLE +&amp;#10;&amp;#8220; ( _id integer primary key autoincrement,&amp;#8221; +&amp;#10;&amp;#8220;column_one text not null);&amp;#8221;;&amp;#10; &amp;#10;SQLiteDatabase myDatabase;&amp;#10; &amp;#10;private void createDatabase() &amp;#123;&amp;#10;myDatabase = openOrCreateDatabase(DATABASE_NAME, Context.MODE_PRIVATE, null);&amp;#10;myDatabase.execSQL(DATABASE_CREATE);&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;PS：该方法得到的数据库文件，其存储路径与上一方法相同。&lt;/p&gt;
&lt;h1 id=&quot;三、直接调用SQLiteDatabase类的静态方法openOrCreateDatabases&quot;&gt;&lt;a href=&quot;#三、直接调用SQLiteDatabase类的静态方法openOrCreateDatabases&quot; class=&quot;headerlink&quot; title=&quot;三、直接调用SQLiteDatabase类的静态方法openOrCreateDatabases()&quot;&gt;&lt;/a&gt;三、直接调用SQLiteDatabase类的静态方法openOrCreateDatabases()&lt;/h1&gt;&lt;p&gt;SQLiteDatabase类有几个静态方法可直接打开或创建数据库。&lt;br&gt;//等同于openDatabase(path, factory, SQLiteDatabase.CREATE_IF_NECESSARY)  &lt;/p&gt;
&lt;p&gt;openOrCreateDatabase(String path, CursorFactory factory)&lt;br&gt;//等同于openDatabase(file.getPath(), factory, SQLiteDatabase.CREATE_IF_NECESSARY)&lt;/p&gt;
&lt;p&gt;openOrCreateDatabase(File file, CursorFactory factory)&lt;br&gt;//等同于openDatabase(file.getPath(), factory, SQLiteDatabase.CREATE_IF_NECESSARY, errorHandler)&lt;/p&gt;
&lt;p&gt;openOrCreateDatabase(String path, CursorFactory factory, DatabaseErrorHandler errorHandler)&lt;/p&gt;
&lt;p&gt;PS：该方法打开或创建的数据库文件可与上述两个方法的路径不同。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    private static final String DATABASE_NAME = &amp;#34;xiangjie.db&amp;#34;;&amp;#10;    private static final String DATABASE_TABLE = &amp;#34;test&amp;#34;;&amp;#10;    private static final String DATABASE_CREATE =&amp;#10;    &amp;#34;create table &amp;#34; + DATABASE_TABLE +&amp;#10;            &amp;#34; ( _id integer primary key autoincrement,&amp;#34; +&amp;#10;            &amp;#34;column_one text not null)&amp;#34;;&amp;#10;    @Override&amp;#10;    protected void onCreate(Bundle savedInstanceState) &amp;#123;&amp;#10;        super.onCreate(savedInstanceState);&amp;#10;        setContentView(R.layout.activity_green_dao);&amp;#10;        &amp;#10;       SQLiteDatabase db = SQLiteDatabase.openOrCreateDatabase(&amp;#34;/sdcard/&amp;#34;+DATABASE_NAME, null);&amp;#10;        &amp;#10;        //db.execSQL(&amp;#34;create table test ( _id integer primary key autoincrement,column_one text not null)&amp;#34;);&amp;#10;//        db.execSQL(&amp;#34;insert into test (column_one) values(?)&amp;#34;,new Object[]&amp;#123;&amp;#34;1111&amp;#34;&amp;#125;);&amp;#10;&amp;#10;        Cursor cursor = db.rawQuery(&amp;#34;select * from test;&amp;#34;,null);&amp;#10;        while (cursor.moveToNext()) &amp;#123;&amp;#10;            String id = cursor.getString(0);//&amp;#33719;&amp;#21462;&amp;#31532;&amp;#19968;&amp;#21015;&amp;#30340;&amp;#20540;&amp;#10;            Log.d(&amp;#34;Q_M:&amp;#34;,id);&amp;#10;        &amp;#125;&amp;#10;        cursor.close();&amp;#10;        db.close();&amp;#10;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;最后记住，不管用何种方式打开了数据库，获得的SQLite对象不再使用时，都要调用close()来关闭打开的数据库，否则抛出IllegalStateException异常。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一、-SQLiteOpenHelper辅助类&quot;&gt;&lt;a href=&quot;#一、-SQLiteOpenHelper辅助类&quot; class=&quot;headerlink&quot; title=&quot;一、 SQLiteOpenHelper辅助类&quot;&gt;&lt;/a&gt;一、 SQLiteOpenHelper辅
    
    </summary>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="数据库" scheme="http://febsky.me/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Android 中实现倒计时</title>
    <link href="http://febsky.me/2016/05/10/2016-05-10-Android%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%80%92%E8%AE%A1%E6%97%B6%E7%9A%84%E6%96%B9%E5%BC%8F/"/>
    <id>http://febsky.me/2016/05/10/2016-05-10-Android中实现倒计时的方式/</id>
    <published>2016-05-10T04:14:42.000Z</published>
    <updated>2016-06-02T15:13:55.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Android-中实现倒计时控件的方法有哪些&quot;&gt;&lt;a href=&quot;#Android-中实现倒计时控件的方法有哪些&quot; class=&quot;headerlink&quot; title=&quot;Android 中实现倒计时控件的方法有哪些&quot;&gt;&lt;/a&gt;Android 中实现倒计时控件的方法有哪些&lt;/h1&gt;&lt;p&gt;今天在工作中用到了倒计时功能，也就是在一个TextView上显示倒计时。突然想到当时面试的时候有家公司的面试官问我在Android中实现倒计时功能我会用哪些方法。哈哈当时竟然不知道Android sdk本身就有实现了。丢人~&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;第一种CountDownTimer&quot;&gt;&lt;a href=&quot;#第一种CountDownTimer&quot; class=&quot;headerlink&quot; title=&quot;第一种CountDownTimer&quot;&gt;&lt;/a&gt;第一种CountDownTimer&lt;/h2&gt;&lt;p&gt;位于&lt;code&gt;android.os.CountDownTimer&lt;/code&gt;这个类很好用。可以直接查看官方文档，文档中就有实例代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CountDownTimer(&lt;span class=&quot;number&quot;&gt;30000&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onTick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; millisUntilFinished)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                textView.setText(&lt;span class=&quot;string&quot;&gt;&quot;seconds remaining: &quot;&lt;/span&gt; + millisUntilFinished / &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onFinish&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                textView.setText(&lt;span class=&quot;string&quot;&gt;&quot;done!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;.start();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;第二种-Timer与TimerTask-runOnUiThread-runnable-方法&quot;&gt;&lt;a href=&quot;#第二种-Timer与TimerTask-runOnUiThread-runnable-方法&quot; class=&quot;headerlink&quot; title=&quot;第二种 Timer与TimerTask + runOnUiThread(runnable)方法&quot;&gt;&lt;/a&gt;第二种 Timer与TimerTask + runOnUiThread(runnable)方法&lt;/h2&gt;&lt;h2 id=&quot;第三种Handler与Message（不用TimerTask）&quot;&gt;&lt;a href=&quot;#第三种Handler与Message（不用TimerTask）&quot; class=&quot;headerlink&quot; title=&quot;第三种Handler与Message（不用TimerTask）&quot;&gt;&lt;/a&gt;第三种Handler与Message（不用TimerTask）&lt;/h2&gt;&lt;h2 id=&quot;第四种Handler与Runnable（最简单型）&quot;&gt;&lt;a href=&quot;#第四种Handler与Runnable（最简单型）&quot; class=&quot;headerlink&quot; title=&quot;第四种Handler与Runnable（最简单型）&quot;&gt;&lt;/a&gt;第四种Handler与Runnable（最简单型）&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; recLen = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TextView txtView;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.timertask);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        txtView = (TextView)findViewById(R.id.txttime);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handler.postDelayed(runnable, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;     &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Handler handler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Handler();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Runnable runnable = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            recLen++;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            txtView.setText(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; + recLen);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            handler.postDelayed(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Android-中实现倒计时控件的方法有哪些&quot;&gt;&lt;a href=&quot;#Android-中实现倒计时控件的方法有哪些&quot; class=&quot;headerlink&quot; title=&quot;Android 中实现倒计时控件的方法有哪些&quot;&gt;&lt;/a&gt;Android 中实现倒计时控件的方法有哪些&lt;/h1&gt;&lt;p&gt;今天在工作中用到了倒计时功能，也就是在一个TextView上显示倒计时。突然想到当时面试的时候有家公司的面试官问我在Android中实现倒计时功能我会用哪些方法。哈哈当时竟然不知道Android sdk本身就有实现了。丢人~&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="Java" scheme="http://febsky.me/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>nodejs的学习</title>
    <link href="http://febsky.me/2016/05/07/2016-05-07-nodejs%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>http://febsky.me/2016/05/07/2016-05-07-nodejs的学习/</id>
    <published>2016-05-07T12:18:31.000Z</published>
    <updated>2016-05-29T14:27:50.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Mac-安装&quot;&gt;&lt;a href=&quot;#Mac-安装&quot; class=&quot;headerlink&quot; title=&quot;Mac 安装&quot;&gt;&lt;/a&gt;Mac 安装&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;检查Python 是否安装&lt;code&gt;python -V&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;检查ruby是否安装&lt;code&gt;ruby -v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;首先安装&lt;code&gt;homebrew&lt;/code&gt;,然后命令行&lt;code&gt;brew install node&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;检查node是否安装成功 &lt;code&gt;node -v&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后命令行&lt;code&gt;node&lt;/code&gt;可以打开nodejs的交互器，和Python类似，很好玩&lt;/li&gt;
&lt;li&gt;打开控制台输入 which node ，得到的输出结果就是node安装路径。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Hello-World&quot;&gt;&lt;a href=&quot;#Hello-World&quot; class=&quot;headerlink&quot; title=&quot;Hello World&quot;&gt;&lt;/a&gt;Hello World&lt;/h1&gt;&lt;p&gt;什么不说直接上代码，Mac命令行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ vim server.js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;输入下面代码&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; http = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;http&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http.createServer(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req,res&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   res.writeHead(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   res.end(&lt;span class=&quot;string&quot;&gt;&#39;Hello World\n&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).listen(&lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;127.0.0.1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Server running at http://127.0.0.1:1337/&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;$ node server.js&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;模块与包管理工具&quot;&gt;&lt;a href=&quot;#模块与包管理工具&quot; class=&quot;headerlink&quot; title=&quot;模块与包管理工具&quot;&gt;&lt;/a&gt;模块与包管理工具&lt;/h1&gt;&lt;p&gt;Commonjs 规范,理解模块含义理解模块&lt;code&gt;export&lt;/code&gt;和&lt;code&gt;requite&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;模块大致分为三种：核心模块、文件模块、第三方模块&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;模块创建流程：&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建模块&lt;code&gt;teacher.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;导出模块 &lt;code&gt;export.add = function{}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;加载模块 `var teacher = requite(‘./teacher.js’)&lt;/li&gt;
&lt;li&gt;使用模块 &lt;code&gt;teacher.add(&amp;#39;Scott&amp;#39;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;基本API&quot;&gt;&lt;a href=&quot;#基本API&quot; class=&quot;headerlink&quot; title=&quot;基本API&quot;&gt;&lt;/a&gt;基本API&lt;/h1&gt;&lt;p&gt;查看一个model的所拥有的函数&lt;code&gt;$ node&lt;/code&gt;开启nodejs交互器&lt;br&gt;然后输入模块名，比如想看url模块,直接在交互器输入&lt;code&gt;url&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#62; url&amp;#10;&amp;#123; parse: [Function: urlParse],&amp;#10;  resolve: [Function: urlResolve],&amp;#10;  resolveObject: [Function: urlResolveObject],&amp;#10;  format: [Function: urlFormat],&amp;#10;  Url: [Function: Url] &amp;#125;&amp;#10;&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;了解http-模块&quot;&gt;&lt;a href=&quot;#了解http-模块&quot; class=&quot;headerlink&quot; title=&quot;了解http 模块&quot;&gt;&lt;/a&gt;了解http 模块&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;什么是回调？&lt;/li&gt;
&lt;li&gt;什么是同步/异步？&lt;/li&gt;
&lt;li&gt;什么是I/O？&lt;/li&gt;
&lt;li&gt;什么的单线程/多线程？&lt;/li&gt;
&lt;li&gt;什么是阻塞/非阻塞？&lt;/li&gt;
&lt;li&gt;什么是事件？&lt;/li&gt;
&lt;li&gt;什么是事件驱动？&lt;/li&gt;
&lt;li&gt;什么是基于事件驱动的回调？&lt;/li&gt;
&lt;li&gt;什么是事件循环？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;理解nodejs中的 this （上下文）,一般指向当前函数的拥有者。&lt;br&gt;但是&lt;code&gt;call&lt;/code&gt;方法可以改变this上下文&lt;/p&gt;
&lt;h2 id=&quot;Node的突出特点&quot;&gt;&lt;a href=&quot;#Node的突出特点&quot; class=&quot;headerlink&quot; title=&quot;Node的突出特点&quot;&gt;&lt;/a&gt;Node的突出特点&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;WEB服务器&lt;br&gt;NodeJS与一般的后台编译性语言有什么不同?        &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;NodeJS本身包含一个http服务器，不像asp.net程序需要一个IIS，或者java的程序需要一个apche&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NodeJS是异步IO，事件驱动的;一般的程序调用都是执行一个命令之后，线程阻塞，一直等到命令成功之后，才会去执行下面的事情，但是NodeJS不一样，所有的IO，网络通信，磁盘操作都是由事件来控制的，Nodejs进程在同一时刻只会处理一个事件，完成后立即进入事件轮询并检查处理后面的事件。如图&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;【参考文献】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个学习网站&lt;a href=&quot;http://www.runoob.com/nodejs/nodejs-express-framework.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点这儿&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.nodeclass.com/articles/99682&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Orm2参考使用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://docs.sequelizejs.com/en/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sequelize github上start最多的orm&lt;/a&gt; &lt;a href=&quot;http://my.oschina.net/zj0303/blog/305384&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一个使用教程&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Mac-安装&quot;&gt;&lt;a href=&quot;#Mac-安装&quot; class=&quot;headerlink&quot; title=&quot;Mac 安装&quot;&gt;&lt;/a&gt;Mac 安装&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;检查Python 是否安装&lt;code&gt;python -V&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;检查r
    
    </summary>
    
      <category term="nodejs" scheme="http://febsky.me/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://febsky.me/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>Android 打包过程</title>
    <link href="http://febsky.me/2016/05/06/2016-05-06-Android%E6%89%93%E5%8C%85%E8%BF%87%E7%A8%8B/"/>
    <id>http://febsky.me/2016/05/06/2016-05-06-Android打包过程/</id>
    <published>2016-05-06T04:14:42.000Z</published>
    <updated>2016-05-13T15:55:16.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Android-打包过程&quot;&gt;&lt;a href=&quot;#Android-打包过程&quot; class=&quot;headerlink&quot; title=&quot;Android 打包过程&quot;&gt;&lt;/a&gt;Android 打包过程&lt;/h1&gt;&lt;p&gt;第一步：打包资源文件，生成R.java文件&lt;br&gt;【输入】Resource文件（就是工程中res中的文件）、Assets文件（相当于另外一种资源，这种资源Android系统并不像对res中的文件那样优化它）、AndroidManifest.xml文件（包名就是从这里读取的，因为生成R.java文件需要包名）、Android基础类库（Android.jar文件）&lt;br&gt;【输出】打包好的资源（一般在Android工程的bin目录可以看到一个叫resources.ap_的文件就是它了）、R.java文件（在gen目录中，大家应该很熟悉了）&lt;br&gt;【工具】aapt工具，它的路径在${ANDROID_SDK_HOME}/platform-tools/aapt（如果你使用的是Windows系统，按惯例路径应该这样写：%ANDROID_SDK_HOME%\platform-tools\aapt.exe，下同）。&lt;/p&gt;
&lt;p&gt;第二步：处理AIDL文件，生成对应的.java文件（当然，有很多工程没有用到AIDL，那这个过程就可以省了）&lt;br&gt;【输入】源码文件、aidl文件、framework.aidl文件&lt;br&gt;【输出】对应的.java文件&lt;br&gt;【工具】aidl工具&lt;/p&gt;
&lt;p&gt;第三步：编译Java文件，生成对应的.class文件&lt;br&gt;【输入】源码文件（包括R.java和AIDL生成的.java文件）、库文件（.jar文件）&lt;br&gt;【输出】.class文件&lt;br&gt;【工具】javac工具&lt;/p&gt;
&lt;p&gt;第四步：把.class文件转化成Davik VM支持的.dex文件&lt;br&gt;【输入】 .class文件（包括Aidl生成.class文件，R生成的.class文件，源文件生成的.class文件），库文件（.jar文件）&lt;br&gt;【输出】.dex文件&lt;br&gt;【工具】javac工具&lt;/p&gt;
&lt;p&gt;第五步：打包生成未签名的.apk文件&lt;br&gt;【输入】打包后的资源文件、打包后类文件（.dex文件）、libs文件（包括.so文件，当然很多工程都没有这样的文件，如果你不使用C/C++开发的话）&lt;br&gt;【输出】未签名的.apk文件&lt;br&gt;【工具】apkbuilder工具&lt;/p&gt;
&lt;p&gt;第六步：对未签名.apk文件进行签名&lt;br&gt;【输入】未签名的.apk文件&lt;br&gt;【输出】签名的.apk文件&lt;br&gt;【工具】jarsigner&lt;/p&gt;
&lt;p&gt;第七步：对签名后的.apk文件进行对齐处理（不进行对齐处理是不能发布到Google Market的）&lt;br&gt;【输入】签名后的.apk文件&lt;br&gt;【输出】对齐后的.apk文件&lt;br&gt;【工具】zipalign工具&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Android-打包过程&quot;&gt;&lt;a href=&quot;#Android-打包过程&quot; class=&quot;headerlink&quot; title=&quot;Android 打包过程&quot;&gt;&lt;/a&gt;Android 打包过程&lt;/h1&gt;&lt;p&gt;第一步：打包资源文件，生成R.java文件&lt;br&gt;【输入】R
    
    </summary>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
      <category term="编译" scheme="http://febsky.me/tags/%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>Android FragmentPagerAdapter和FragmentStatePagerAdapter</title>
    <link href="http://febsky.me/2016/05/06/2016-05-12-FragmentStatePagerAdapter%E5%92%8CFragmentPagerAdapter/"/>
    <id>http://febsky.me/2016/05/06/2016-05-12-FragmentStatePagerAdapter和FragmentPagerAdapter/</id>
    <published>2016-05-06T04:14:42.000Z</published>
    <updated>2016-05-13T15:56:42.000Z</updated>
    
    <content type="html">&lt;p&gt;在公司查看别人的代码的时候发现个东西，在展示试题的是时候，他用的是&lt;code&gt;FragmentStatePagerAdapter&lt;/code&gt;而如果是我的话，我就直接用&lt;code&gt;viewpager&lt;/code&gt;+&lt;code&gt;PagerAdapter&lt;/code&gt;,但是&lt;code&gt;FragmentStatePagerAdapter&lt;/code&gt;是个什么鬼，我听过&lt;code&gt;FragmentPagerAdapter&lt;/code&gt;可是没用过&lt;code&gt;FragmentStatePagerAdapter&lt;/code&gt;啊，只怪自己学艺不精，既然人家用了就有用的道理。&lt;/p&gt;
&lt;h1 id=&quot;文档说明&quot;&gt;&lt;a href=&quot;#文档说明&quot; class=&quot;headerlink&quot; title=&quot;文档说明&quot;&gt;&lt;/a&gt;文档说明&lt;/h1&gt;&lt;p&gt;跟踪源码来看一下FragmentPagerAdapter和FragmentStatePagerAdapter的API说明。我们先来看看FragmentPagerAdapter的API（直接翻译吧）：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FragmentPagerAdapter继承自PagerAdapter ，主要用来展示多个Fragment页面，并且每一个Fragment都会被保存在fragment manager中。 FragmentPagerAdapter最适用于那种少量且相对静态的页面，例如几个tab页。每一个用户访问过的fragment都会被保存在内存中，尽管他的视图层级可能会在不可见时被销毁。这可能导致大量的内存因为fragment实例能够拥有任意数量的状态。对于较多的页面集合，更推荐使用FragmentStatePagerAdapter。 当使用FragmentPagerAdapter的时候对应的ViewPager必须拥有一个有效的ID集。 FragmentPagerAdapter的派生类只需要实现getItem(int)和getCount()即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后是&lt;code&gt;FragmentStatePagerAdapter&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FragmentStatePagerAdapter继承自PagerAdapter，主要使用Fragment来管理每个页面。这个类同样用来保存和恢复fragment页面的状态。 FragmentStatePagerAdapter更多用于大量页面，例如视图列表。当某个页面对用户不再可见时，他们的整个fragment就会被销毁，仅保留fragment状态。相比于FragmentPagerAdapter，这样做的好处是在访问各个页面时能节约大量的内存开销，但代价是在页面切换时会增加非常多的开销。 当使用FragmentPagerAdapter的时候对应的ViewPager必须拥有一个有效的ID集。 FragmentStatePagerAdapter的派生类只需要实现getItem(int)和getCount()即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;#直接上结论，然后是分析代码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;FragmentStatePagerAdapter&lt;br&gt;顾名思义，我们的这个FragmentStatePagerAdapter，在我们切换不同的Fragment的时候，我们会把前面的Fragment销毁，所谓的销毁就是走完Fragment的生命周期，调用&lt;code&gt;onDestroyView&lt;/code&gt;,&lt;code&gt;onDestroy&lt;/code&gt;,直到&lt;code&gt;onDetach&lt;/code&gt;为止,而我们系统在销毁前，会把我们的我们Fragment的Bundle在我们的onSaveInstanceState(Bundle)保存下来。等用户切换回来的时候，我们的Fragment就会根据我们的instance state恢复出来。并且当切换回来的时候会调用这个Fragment的整个生命周期从&lt;code&gt;onAttach&lt;/code&gt;方法开始。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FragmentPagerAdapter&lt;br&gt;使用这种Adapter，我们的Fragment在切换的时候，只会把我们的Fragment的view销毁，也就是说一个Fragment的生命周期只会调用到&lt;code&gt;onDestroyView&lt;/code&gt;,变不会再往下执行，下一次再滑动viewpager回到上一个&lt;code&gt;Fragment&lt;/code&gt;的时候,会从这个Fragment的&lt;code&gt;onCreateView&lt;/code&gt;开始执行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;代码验证&quot;&gt;&lt;a href=&quot;#代码验证&quot; class=&quot;headerlink&quot; title=&quot;代码验证&quot;&gt;&lt;/a&gt;代码验证&lt;/h1&gt;&lt;h2 id=&quot;Fragment代码&quot;&gt;&lt;a href=&quot;#Fragment代码&quot; class=&quot;headerlink&quot; title=&quot;Fragment代码&quot;&gt;&lt;/a&gt;Fragment代码&lt;/h2&gt;&lt;p&gt;为了代码简洁Fragment的布局文件就不再给出，就是一个&lt;code&gt;RelativeLayout&lt;/code&gt;包含一个&lt;code&gt;TextView&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package me.fesky.test.fragment;&amp;#10;&amp;#10;import android.content.Context;&amp;#10;import android.os.Bundle;&amp;#10;import android.support.annotation.Nullable;&amp;#10;import android.support.v4.app.Fragment;&amp;#10;import android.util.Log;&amp;#10;import android.view.LayoutInflater;&amp;#10;import android.view.View;&amp;#10;import android.view.ViewGroup;&amp;#10;import android.widget.TextView;&amp;#10;&amp;#10;import me.fesky.test.R;&amp;#10;&amp;#10;/**&amp;#10; * Created by Administrator on 2016/5/12.&amp;#10; */&amp;#10;public class MyFragment extends Fragment &amp;#123;&amp;#10;&amp;#10;    int index;&amp;#10;&amp;#10;    @Override&amp;#10;    public void onAttach(Context context) &amp;#123;&amp;#10;        super.onAttach(context);&amp;#10;        Bundle bundle = getArguments();&amp;#10;        index = bundle.getInt(&amp;#34;index&amp;#34;);&amp;#10;        Log.i(&amp;#34;Q_M:&amp;#34;, &amp;#34;onAttach&amp;#34; + index);&amp;#10;    &amp;#125;&amp;#10;&amp;#10;    @Nullable&amp;#10;    @Override&amp;#10;    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) &amp;#123;&amp;#10;        View view = inflater.inflate(R.layout.fragment, container, false);&amp;#10;        TextView textView = (TextView) view.findViewById(R.id.text_view);&amp;#10;&amp;#10;        textView.setText(textView.getText()+&amp;#34;&amp;#34;+index);&amp;#10;&amp;#10;        Log.i(&amp;#34;Q_M:&amp;#34;, &amp;#34;onCreateView&amp;#34; + index);&amp;#10;        return view;&amp;#10;    &amp;#125;&amp;#10;&amp;#10;    @Override&amp;#10;    public void onDestroyView() &amp;#123;&amp;#10;        super.onDestroyView();&amp;#10;&amp;#10;        Log.i(&amp;#34;Q_M:&amp;#34;, &amp;#34;onDestroyView&amp;#34; + index);&amp;#10;    &amp;#125;&amp;#10;&amp;#10;    @Override&amp;#10;    public void onDestroy() &amp;#123;&amp;#10;        super.onDestroy();&amp;#10;&amp;#10;        Log.i(&amp;#34;Q_M:&amp;#34;, &amp;#34;onDestroy&amp;#34; + index);&amp;#10;    &amp;#125;&amp;#10;&amp;#10;    @Override&amp;#10;    public void onDetach() &amp;#123;&amp;#10;        super.onDetach();&amp;#10;        Log.i(&amp;#34;Q_M:&amp;#34;, &amp;#34;onDetach&amp;#34; + index);&amp;#10;    &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;Activity以及adapter代码&quot;&gt;&lt;a href=&quot;#Activity以及adapter代码&quot; class=&quot;headerlink&quot; title=&quot;Activity以及adapter代码&quot;&gt;&lt;/a&gt;Activity以及adapter代码&lt;/h2&gt;&lt;p&gt;为了代码简洁&lt;code&gt;Activity&lt;/code&gt;的布局文件就不再给出，就是一个&lt;code&gt;RelativeLayout&lt;/code&gt;包含一个&lt;code&gt;android.support.v4.view.ViewPager&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package me.fesky.test;&amp;#10;&amp;#10;import android.support.v4.app.Fragment;&amp;#10;import android.support.v4.app.FragmentManager;&amp;#10;import android.support.v4.app.FragmentPagerAdapter;&amp;#10;import android.support.v4.app.FragmentStatePagerAdapter;&amp;#10;import android.support.v4.view.PagerAdapter;&amp;#10;import android.support.v4.view.ViewPager;&amp;#10;import android.support.v7.app.AppCompatActivity;&amp;#10;import android.os.Bundle;&amp;#10;&amp;#10;import java.util.ArrayList;&amp;#10;import java.util.List;&amp;#10;&amp;#10;import me.fesky.test.fragment.MyFragment;&amp;#10;&amp;#10;public class TestFragmentActivity extends AppCompatActivity &amp;#123;&amp;#10;&amp;#10;    ViewPager viewPager;&amp;#10;&amp;#10;    List&amp;#60;Fragment&amp;#62; fragments;&amp;#10;&amp;#10;    @Override&amp;#10;    protected void onCreate(Bundle savedInstanceState) &amp;#123;&amp;#10;        super.onCreate(savedInstanceState);&amp;#10;        setContentView(R.layout.activity_test_fragment);&amp;#10;&amp;#10;        fragments = new ArrayList&amp;#60;&amp;#62;();&amp;#10;&amp;#10;        /**&amp;#10;         * &amp;#21019;&amp;#24314;&amp;#22235;&amp;#20010;Fragment&amp;#10;         */&amp;#10;        fragments.add(new MyFragment());&amp;#10;        fragments.add(new MyFragment());&amp;#10;        fragments.add(new MyFragment());&amp;#10;        fragments.add(new MyFragment());&amp;#10;&amp;#10;        /**&amp;#10;         *&amp;#29992;&amp;#36825;&amp;#31181;&amp;#26041;&amp;#24335;&amp;#21521;Fragment&amp;#20256;&amp;#36882;&amp;#21442;&amp;#25968;&amp;#10;         */&amp;#10;        Bundle bundle1 = new Bundle();&amp;#10;        bundle1.putInt(&amp;#34;index&amp;#34;,1);&amp;#10;        fragments.get(0).setArguments(bundle1);&amp;#10;&amp;#10;        Bundle bundle2 = new Bundle();&amp;#10;        bundle2.putInt(&amp;#34;index&amp;#34;,2);&amp;#10;        fragments.get(1).setArguments(bundle2);&amp;#10;&amp;#10;        Bundle bundle3 = new Bundle();&amp;#10;        bundle3.putInt(&amp;#34;index&amp;#34;,3);&amp;#10;        fragments.get(2).setArguments(bundle3);&amp;#10;&amp;#10;        Bundle bundle4 = new Bundle();&amp;#10;        bundle4.putInt(&amp;#34;index&amp;#34;,4);&amp;#10;        fragments.get(3).setArguments(bundle4);&amp;#10;&amp;#10;        viewPager = (ViewPager) findViewById(R.id.view_pager);&amp;#10;        PagerAdapter pagerAdapter = new MyFragmentPagerAdapter(getSupportFragmentManager());&amp;#10;&amp;#10;        viewPager.setAdapter(pagerAdapter);&amp;#10;    &amp;#125;&amp;#10;&amp;#10;&amp;#10;    /**&amp;#10;     * &amp;#23581;&amp;#35797;&amp;#20999;&amp;#25442;&amp;#32487;&amp;#25215;&amp;#30340;FragmentPagerAdapter&amp;#21644;FragmentStatePagerAdapter&amp;#10;     * &amp;#35266;&amp;#23519;&amp;#25171;&amp;#21360;&amp;#32467;&amp;#26524;&amp;#26377;&amp;#20160;&amp;#20040;&amp;#19981;&amp;#21516;&amp;#10;     */&amp;#10;    public  class MyFragmentPagerAdapter extends FragmentPagerAdapter &amp;#123;&amp;#10;&amp;#10;        public MyFragmentPagerAdapter(FragmentManager fm) &amp;#123;&amp;#10;            super(fm);&amp;#10;        &amp;#125;&amp;#10;&amp;#10;        @Override&amp;#10;        public Fragment getItem(int position) &amp;#123;&amp;#10;            return fragments.get(position);&amp;#10;        &amp;#125;&amp;#10;&amp;#10;        @Override&amp;#10;        public int getCount() &amp;#123;&amp;#10;            return fragments.size();&amp;#10;        &amp;#125;&amp;#10;    &amp;#125;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;font colot=&quot;red&quot;&gt; 注意上面所说的销毁都是建立在ViewPager缓存逻辑之上的并不是划过去就会销毁的。不了解的可以看下ViewPager的销毁机制&lt;/font&gt;

&lt;/blockquote&gt;
&lt;p&gt;运行上面的测试代码，可以看到，当adapter是&lt;code&gt;FragmentPagerAdapter&lt;/code&gt;打印结果如下：&lt;/p&gt;
&lt;p&gt;ViewPager向后滑动结果如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;05-12 16:24:53.370 11366-11366/me.fesky.test I/Q_M:: onAttach1&lt;br&gt;05-12 16:24:53.380 11366-11366/me.fesky.test I/Q_M:: onCreateView1&lt;br&gt;05-12 16:24:53.380 11366-11366/me.fesky.test I/Q_M:: onAttach2&lt;br&gt;05-12 16:24:53.380 11366-11366/me.fesky.test I/Q_M:: onCreateView2&lt;br&gt;05-12 16:25:36.260 11366-11366/me.fesky.test I/Q_M:: onAttach3&lt;br&gt;05-12 16:25:36.270 11366-11366/me.fesky.test I/Q_M:: onCreateView3&lt;br&gt;05-12 16:25:39.980 11366-11366/me.fesky.test I/Q_M:: onDestroyView1&lt;br&gt;05-12 16:25:39.980 11366-11366/me.fesky.test I/Q_M:: onAttach4&lt;br&gt;05-12 16:25:39.980 11366-11366/me.fesky.test I/Q_M:: onCreateView4&lt;br&gt;05-12 16:25:44.760 11366-11366/me.fesky.test I/Q_M:: onDestroyView2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ViewPager向前滑动结果如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;05-12 16:26:17.220 11366-11366/me.fesky.test I/Q_M:: onCreateView2&lt;br&gt;05-12 16:26:18.720 11366-11366/me.fesky.test I/Q_M:: onCreateView1&lt;br&gt;05-12 16:26:18.720 11366-11366/me.fesky.test I/Q_M:: onDestroyView4&lt;br&gt;05-12 16:26:27.450 11366-11366/me.fesky.test I/Q_M:: onDestroyView3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当adapter是&lt;code&gt;FragmentStatePagerAdapter&lt;/code&gt;打印结果如下：&lt;/p&gt;
&lt;p&gt;ViewPager向后(也就是向下一页滑动)滑动结果如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;05-12 16:53:36.940 3043-3043/me.fesky.test I/Q_M:: onAttach1&lt;br&gt;05-12 16:53:36.950 3043-3043/me.fesky.test I/Q_M:: onCreateView1&lt;br&gt;05-12 16:53:36.950 3043-3043/me.fesky.test I/Q_M:: onAttach2&lt;br&gt;05-12 16:53:36.950 3043-3043/me.fesky.test I/Q_M:: onCreateView2&lt;br&gt;05-12 16:53:44.500 3043-3043/me.fesky.test I/Q_M:: onAttach3&lt;br&gt;05-12 16:53:44.500 3043-3043/me.fesky.test I/Q_M:: onCreateView3&lt;br&gt;05-12 16:53:46.250 3043-3043/me.fesky.test I/Q_M:: onDestroyView1&lt;br&gt;05-12 16:53:46.250 3043-3043/me.fesky.test I/Q_M:: onDestroy1&lt;br&gt;05-12 16:53:46.250 3043-3043/me.fesky.test I/Q_M:: onDetach1&lt;br&gt;05-12 16:53:46.250 3043-3043/me.fesky.test I/Q_M:: onAttach4&lt;br&gt;05-12 16:53:46.250 3043-3043/me.fesky.test I/Q_M:: onCreateView4&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ViewPager向前滑动结果如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;05-12 16:55:31.350 3043-3043/me.fesky.test I/Q_M:: onAttach2&lt;br&gt;05-12 16:55:31.360 3043-3043/me.fesky.test I/Q_M:: onCreateView2&lt;br&gt;05-12 16:55:33.620 3043-3043/me.fesky.test I/Q_M:: onDestroyView4&lt;br&gt;05-12 16:55:33.620 3043-3043/me.fesky.test I/Q_M:: onDestroy4&lt;br&gt;05-12 16:55:33.620 3043-3043/me.fesky.test I/Q_M:: onDetach4&lt;br&gt;05-12 16:55:33.620 3043-3043/me.fesky.test I/Q_M:: onAttach1&lt;br&gt;05-12 16:55:33.620 3043-3043/me.fesky.test I/Q_M:: onCreateView1&lt;br&gt;05-12 16:55:35.040 3043-3043/me.fesky.test I/Q_M:: onDestroyView3&lt;br&gt;05-12 16:55:35.040 3043-3043/me.fesky.test I/Q_M:: onDestroy3&lt;br&gt;05-12 16:55:35.040 3043-3043/me.fesky.test I/Q_M:: onDetach3&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在公司查看别人的代码的时候发现个东西，在展示试题的是时候，他用的是&lt;code&gt;FragmentStatePagerAdapter&lt;/code&gt;而如果是我的话，我就直接用&lt;code&gt;viewpager&lt;/code&gt;+&lt;code&gt;PagerAdapter&lt;/code&gt;,但是&lt;c
    
    </summary>
    
    
      <category term="Android" scheme="http://febsky.me/tags/Android/"/>
    
  </entry>
  
</feed>
